ggtitle(paste(fip, "SF Summer Mobility Over 34 Degrees")) +
geom_sf(data = tm_19_20, size = 0.002, aes(fill = yvar_cut)) +
scale_fill_brewer(palette = "PiYG", direction = -1, na.value = "grey") +
facet_wrap( ~ year, nrow = 2) +
labs(colour="Mobility Metric") +
theme_bw()
## combine zoning with mobility data
temp_mobility_data_sm <- temp_mobility_data %>%
filter(mean_high_c >= 34) %>%
group_by(year, cbg = census_block_group, fips) %>%
summarize(yvar = mean(visitors_percap, na.rm = T)) %>%
mutate(yvar_cut = cut(yvar, c(seq(-1, 5, 1), Inf)))
temp_mobility_cbg <- merge(cbg, temp_mobility_data_sm, by = "cbg")
temp_mobility_data_sm
cbg
cbg$cbg <- paste0(cbg$STATEFP, cbg$COUNTYFP, cbg$TRACTCE, cbg$BLKGRPCE)
cbg <- cbg %>% filter(cbg %in% temp_mobility_data$census_block_group)
temp_mobility_cbg <- merge(cbg, temp_mobility_data_sm, by = "cbg")
temp_mobility_cbg
fip
tm_19_20 <- temp_mobility_cbg %>% filter(year %in% c(2019, 2020)) %>%
filter(fips == fip)
tm_19_20_max <- tm_19_20 %>% mutate(yvar = ifelse(yvar < 3, NA, yvar))
tm_19_20_max
tm_19_20
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20_max %>% select(cbg, fips, year, yvar))
tm_max_cast
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = 2020 - 2019) %>%
mutate(diff_cut = cut(diff, ))
tm_max_cast <- tm_max_cast %>% mutate(diff = 2020 - 2019) %>%
mutate(diff_cut = cut(diff, 5))
tm_max_cast
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = 2020 - 2019) %>%
mutate(diff_cut = cut(diff, 5))
tm_max_cast
tm_max_cast <- tm_max_cast %>% mutate(diff = "2020" - "2019") %>%
mutate(diff_cut = cut(diff, 5))
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
mutate(diff_cut = cut(diff, 5))
tm_max_cast
head(tm_max_cast)
unique(tm_max_cast$diff_cut)
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, 5))
head(tm_max_cast)
unique(tm_max_cast$diff_cut)
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20_max %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, 5))
tm_max_cast
head(tm_max_cast)
unique(tm_max_cast$diff_cut)
max(tm_max_cast$diss)
max(tm_max_cast$diff)
min(tm_max_cast$diff)
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, seq(-10, 30, 10)))
unique(tm_max_cast$diff_cut)
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, seq(-10, 30, 10)))
max(tm_max_cast$diff)
min(tm_max_cast$diff)
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, seq(-10, 30, 10)))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
tm_max_cast
head(tm_max_cast)
ggplot(data = tm_max_cast, aes(x=diff_cut, y=cbg, fill=main_zoning)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle(paste(fip, "Count of Zoning Type by Change in Mobility")) +
scale_color_manual(values=wes_palette(n=2, name="Zissou1")) +
theme_bw()
ggplot(data = tm_max_cast, aes(x=diff_cut, y=main_zoning, fill=main_zoning)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle(paste(fip, "Count of Zoning Type by Change in Mobility")) +
scale_color_manual(values=wes_palette(n=2, name="Zissou1")) +
theme_bw()
head(tm_max_cast)
tm_max_cast %<% filter(cbg == "060750101001")
tm_max_cast %>% filter(cbg == "060750101001")
tm_max_cast <- st_drop_geometry(tm_19_20_max %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf)))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
ggplot(data = tm_max_cast, aes(x=diff_cut, y=main_zoning, fill=main_zoning)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle(paste(fip, "Count of Zoning Type by Change in Mobility")) +
scale_color_manual(values=wes_palette(n=2, name="Zissou1")) +
theme_bw()
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf)))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
ggplot(data = tm_max_cast, aes(x=diff_cut, y=main_zoning, fill=main_zoning)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle(paste(fip, "Count of Zoning Type by Change in Mobility")) +
scale_color_manual(values=wes_palette(n=2, name="Zissou1")) +
theme_bw()
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf), labels = c("Decrease in 2020", "Increase in 2020")))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
ggplot(data = tm_max_cast, aes(x=diff_cut, y=main_zoning, fill=main_zoning)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle(paste(fip, "Count of Zoning Type by Change in Mobility")) +
scale_color_manual(values=wes_palette(n=2, name="Zissou1")) +
theme_bw()
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
filter(!is.na(main_zoning))
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf), labels = c("Decrease in 2020", "Increase in 2020")))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
ggplot(data = tm_max_cast, aes(x=diff_cut, y=main_zoning, fill=main_zoning)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle(paste(fip, "Count of Zoning Type by Change in Mobility")) +
scale_color_manual(values=wes_palette(n=2, name="Zissou1")) +
theme_bw()
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
filter(!is.na(main_zoning)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf), labels = c("Decrease in 2020", "Increase in 2020")))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
ggplot(data = tm_max_cast, aes(x=diff_cut, y=main_zoning, fill=main_zoning)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle(paste(fip, "Count of Zoning Type by Change in Mobility")) +
scale_color_manual(values=wes_palette(n=2, name="Zissou1")) +
theme_bw()
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
filter(!is.na(main_zoning)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf), labels = c("Decrease in 2020", "Increase in 2020")))
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf), labels = c("Decrease in 2020", "Increase in 2020")))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
tm_max_cast <- tm_max_cast %>% filter(!is.na(main_zoning))
ggplot(data = tm_max_cast, aes(x=diff_cut, y=main_zoning, fill=main_zoning)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle(paste(fip, "Count of Zoning Type by Change in Mobility")) +
scale_color_manual(values=wes_palette(n=2, name="Zissou1")) +
theme_bw()
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf), labels = c("Decrease in 2020", "Increase in 2020")))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
tm_max_cast <- tm_max_cast %>% filter(!is.na(main_zoning)) %>% group_by(zoning, diff_cut) %>%
summarize(main_zoning_c = count(main_zoning))
head(tm_max_cast)
tm_max_cast <- tm_max_cast %>% filter(!is.na(main_zoning)) %>% group_by(diff_cut) %>%
summarize(main_zoning_c = count(main_zoning))
tm_max_cast <- tm_max_cast %>% filter(!is.na(main_zoning)) %>% group_by(diff_cut) %>%
summarize(main_zoning_c = nrow(main_zoning))
tm_max_cast
a <- melt(tm_max_cast)
a
head(A)
head(a)
?melt
a <- reshape2::melt(tm_max_cast)
head(a)
head(tm_max_cast)
head(tm_max_cast)
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf), labels = c("Decrease in 2020", "Increase in 2020")))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
pop <- read_csv("us_census/annual_population_2010-2019.csv")
head(pop)
pop <- read_csv("us_census/all_timeseries_latest.csv")
pop <- read_csv("heatwaves_manual/safegraph_open_census_data/data/cbg_b19.csv")
head(pop)
head(pop)
head(cbg)
tm_max_cast
head(tm_max_cast)
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar, ALAND))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf), labels = c("Decrease in 2020", "Increase in 2020")))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
tm_max_cast
head(tm_max_cast)
head(tm_19_20)
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar, ALAND))
tm_max_cast <- dcast(tm_max_cast, cbg + fips ~ year, value.var = "yvar")
tm_max_cast
head(tm_max_cast)
tm_max_cast <- dcast(tm_max_cast, ALAND + cbg + fips ~ year, value.var = "yvar")
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar, ALAND))
tm_max_cast <- dcast(tm_max_cast, ALAND + cbg + fips ~ year, value.var = "yvar")
head(tm_max_cast)
head(temp_mobility_data)
#get income and population data
income <- read.csv(paste0(getwd(), "/heatwaves_manual/safegraph_open_census_data/data/cbg_b19.csv"), stringsAsFactors = F, header = T)
pop <- read_csv("us_census/annual_population_2010-2019.csv")
head(pop)
head(pop)
## rearrange and add in zoning information for this fips
tm_max_cast <- st_drop_geometry(tm_19_20 %>% select(cbg, fips, year, yvar, ALAND))
tm_max_cast <- dcast(tm_max_cast, ALAND + cbg + fips ~ year, value.var = "yvar")
tm_max_cast <- tm_max_cast %>% mutate(diff = `2020` - `2019`) %>%
filter(!is.na(diff)) %>%
mutate(diff_cut = cut(diff, c(-Inf, 0, Inf), labels = c("Decrease in 2020", "Increase in 2020")))
tm_max_cast <- left_join(tm_max_cast, zoning_cbg_nogeo, by = c("cbg", "fips"))
tm_max_cast <- tm_max_cast %>% filter(!is.na(main_zoning)) %>% group_by(diff_cut) %>%
summarize(main_zoning_c = nrow(main_zoning))
head(tm_max_cast)
head(tm_19_20_max)
info <- read_csv("heatwaves_manual/safegraph_open_census_data/metadata/cbg_field_descriptions.csv")
head(info)
pop <- read_csv("eatwaves_manual/safegraph_open_census_data/metadata/cbg_b01.csv")
pop <- read_csv("heatwaves_manual/safegraph_open_census_data/metadata/cbg_b01.csv")
pop <- read_csv("./heatwaves_manual/safegraph_open_census_data/metadata/cbg_b01.csv")
pop <- read_csv("/heatwaves_manual/safegraph_open_census_data/metadata/cbg_b01.csv")
pop <- read_csv("./heatwaves_manual/safegraph_open_census_data/data/cbg_b01.csv")
head(pop)
head(info)
View(head(info))
head(po)
head(pop)
#### Prep population Data ####
pop <- pop %>% select(cbg = census_block_group, population = B00001e1) %>%
filter(cbg %in% unique(temp_mobility_data$census_block_group))
head(po)
head(pop)
head(info)
info %>% filter(table_id == B01001e1)
info %>% filter(table_id == "B01001e1")
pop <- read_csv("./heatwaves_manual/safegraph_open_census_data/data/cbg_b00.csv")
head(po)
head(pop)
#### Prep population Data ####
pop <- pop %>% select(cbg = census_block_group, population = B00001e1) %>%
filter(cbg %in% unique(temp_mobility_data$census_block_group))
head(pop)
nrow(po)
nrow(pop)
length(unique(temp_mobility_cbg$cbg))
#### Prep population Data ####
pop <- pop %>% select(cbg = census_block_group, population = B00001e1) %>%
filter(cbg %in% unique(temp_mobility_data$cbg))
#### Prep population Data ####
pop <- pop %>% select(cbg = cbg, population = B00001e1) %>%
filter(cbg %in% unique(temp_mobility_data$cbg))
pop <- read_csv("./heatwaves_manual/safegraph_open_census_data/data/cbg_b00.csv")
#### Prep population Data ####
pop <- pop %>% select(cbg = census_block_group, population = B00001e1) %>%
filter(cbg %in% unique(temp_mobility_data$cbg))
head(pop)
head(temp_mobility_data)
#### Prep population Data ####
pop <- pop %>% select(cbg = census_block_group, population = B00001e1) %>%
filter(cbg %in% unique(temp_mobility_data$census_block_group))
pop <- read_csv("./heatwaves_manual/safegraph_open_census_data/data/cbg_b00.csv")
#### Prep population Data ####
pop <- pop %>% select(cbg = census_block_group, population = B00001e1) %>%
filter(cbg %in% unique(temp_mobility_data$census_block_group))
head(pop)
temp_mobility_data_sm <- left_join(temp_mobility_data_sm, pop, by = "cbg")
temp_mobility_cbg <- merge(cbg, temp_mobility_data_sm, by = "cbg")
tm_2018 <- temp_mobility_cbg %>% filter(year == 2018)
fip
tm_19_20 <- temp_mobility_cbg %>% filter(year %in% c(2019, 2020)) %>%
filter(fips == fip) %>% mutate(pop_density = population / ALAND)
tm_19_20
quantile(tm_19_20$pop_density)
tm_19_20_max <- tm_19_20 %>% mutate(yvar = ifelse(yvar < 3, NA, yvar))
tm_onlymax <- tm_19_20_max %>% filter(!is.na(yvar))
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_histogram() +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
geom_histogram() +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_histogram() +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density(data = tm_onlymax) +
geom_histogram(data = tm_onlymax) +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_histogram() +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_histogram() +
facet_wrap( ~ year, nrow = 2) +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
quantile(tm_onlymax$pop_density)
unique(temp_mobility_data_sm$fips)
fip <- "06085"
tm_19_20 <- temp_mobility_cbg %>% filter(year %in% c(2019, 2020)) %>%
filter(fips == fip) %>% mutate(pop_density = population / ALAND)
tm_19_20_max <- tm_19_20 %>% mutate(yvar = ifelse(yvar < 3, NA, yvar))
tm_onlymax <- tm_19_20_max %>% filter(!is.na(yvar))
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_histogram() +
facet_wrap( ~ year, nrow = 2) +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
nrow(tm_onlymax)
temp_mobility_cbg
tm_all_onlymax <- temp_mobility_cbg %>% filter(year %in% c(2019, 2020)) %>%
filter(yvar >= 3)
print(ggplot(data = tm_all_onlymax, aes(x = pop_density)) +
geom_density() +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
tm_all_onlymax <- temp_mobility_cbg %>% filter(year %in% c(2019, 2020)) %>%
filter(yvar >= 3) %>% mutate(pop_density = population / (ALAND + AWATER))
print(ggplot(data = tm_all_onlymax, aes(x = pop_density)) +
geom_density() +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_all_onlymax, aes(x = pop_density)) +
geom_histogram() +
facet_wrap( ~ year, nrow = 2) +
ggtitle("Distribution of CBGs with MI > 3") +
theme_bw())
tm_19_20
head(tm_onlymax)
a <- dcast(tm_onlymax, cbg + year ~ yvar)
head(a)
a <- dcast(tm_onlymax, yvar ~ vbg + year)
a <- dcast(tm_onlymax, yvar ~ cbg + year)
head(A)
head(a)
?dcast
?melt
head(tm_onlymax)
a <- dcast(tm_onlymax, year ~ yvar)
head(a)
a <- dcast(tm_onlymax, year ~ yvar)
head(tm_onlymax)
a <- dcast(tm_onlymax, cbg ~ year, value.var = yvar)
a <- dcast(tm_onlymax, cbg ~ year, value.var = "yvar")
head(a)
a <- dcast(tm_19_20, cbg ~ year, value.var = "yvar")
head(A)
head(a)
wilcox.test(a$`2019`,a$`2020`, paired = T)
one <- tm_onlymax %>% filter(year == 2019)
two <- tm_onlymax %>% filter(year == 2020)
head(one)
wilcox.test(one$yvar, two$yvar)
b <- wilcox.test(one$yvar, two$yvar)
names(b)
b$statistic
b$p.value
b
tmom_19 <- tm_onlymax %>% filter(year == 2019)
tmom_20 <- tm_onlymax %>% filter(year == 2020)
MW_U <- wilcox.test(one$yvar, two$yvar)
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", MW_U$p.value),
x=-Inf, y=Inf, hjust=0, vjust=1) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", MW_U$p.value),
x=-Inf, y=Inf, hjust=1, vjust=0) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", MW_U$p.value),
x=-Inf, y=Inf, hjust=1, vjust=1) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", MW_U$p.value),
x=-Inf, y=Inf, hjust=0, vjust=0) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", MW_U$p.value),
x=-Inf, y=Inf, hjust=0, vjust=1) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", MW_U$p.value),
x=-Inf, y=Inf, hjust=1, vjust=1) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", MW_U$p.value),
x=max(tm_onlymax$pop_density)) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", MW_U$p.value),
x=max(tm_onlymax$pop_density), y=Inf) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", MW_U$p.value),
x=-Inf, y=Inf, hjust=0, vjust=1) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", round(MW_U$p.value, 3)),
x=-Inf, y=Inf, hjust=0, vjust=1) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", round(MW_U$p.value, 3)),
x=-Inf, y=Inf, hjust=1, vjust=1) +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", round(MW_U$p.value, 3)),
x=-Inf, y=Inf, hjust=1, vjust=1) +
theme_bw())
print(ggplot(data = tm_onlymax, aes(x = pop_density)) +
geom_density() +
ggtitle("Distribution of CBGs with MI > 3") +
facet_wrap( ~ year, nrow = 2) +
annotate('text', label=paste("MW_U: W =", MW_U$statistic, "pval = ", round(MW_U$p.value, 3)),
x=-Inf, y=Inf, hjust=0, vjust=1) +
theme_bw())
