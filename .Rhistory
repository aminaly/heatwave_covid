ggplot(a, aes(model, mean, group = model)) +
geom_boxplot(aes(fill = model), outlier.alpha = .1) +
#scale_fill_brewer(palette = "Oranges") +
facet_wrap(~ gp, nrow = 2) +
labs(title = "Annual Mean Temperatures") +
theme_bw()
a <- kba_2022_cmip %>% filter(year==2015) %>% ungroup() %>% dplyr::select(SitRecID, mean, model)
b <- kba_2022_cmip %>% filter(year==2100) %>% ungroup() %>% dplyr::select(SitRecID, mean, model)
kt <- left_join(a, b, by = c("SitRecID", "model"))
kt <- kt %>% mutate(dif = mean.y - mean.x)
kt <- left_join(kt, kba_2022 %>% select(SitRecID, protected), by = "SitRecID")
ggplot(kt, aes(model, dif)) +
geom_boxplot(outlier.alpha = .1, aes(fill = model)) +
#scale_fill_brewer(palette = "Oranges") +
labs(title = "Expected Temperature Difference 2015-2100") +
theme_bw()
#### Plots having to do with protections & governance ----
#### protection proportions ----
kt <- kt %>% mutate(protected = fct_relevel(protected, c("FP", "P", "NP")))
ggplot(data = kt, aes(protected)) +
geom_bar(aes(fill = factor(protected, levels = c("FP", "P", "NP")))) +
labs(xlab = "°C Change from 2015 to 2100", ylab = "Number of KBAs", fill = "KBA Coverage") +
scale_fill_manual(values = c("#4d9221", "#e6f5d0", "#c51b7d")) +
theme_bw()
ggplot(data = kt %>% mutate(temp_grp = cut(dif, 4)), aes(temp_grp, group = protected)) +
geom_bar(aes(fill = factor(protected, levels = c("FP", "P", "NP")))) +
labs(xlab = "°C Change from 2015 to 2100", ylab = "Number of KBAs", fill = "KBA Coverage") +
scale_fill_manual(values = c("#4d9221", "#e6f5d0", "#c51b7d")) +
facet_wrap(~model) +
theme_bw()
#### governance ----
kba_wdpa_g <- left_join(kba_wdpa, pas %>% select(WDPAID, geometry))
kba_wdpa_g <- kba_wdpa_g %>% st_set_geometry("geometry") %>% filter(year == 2022)
ggplot(data = kba_wdpa_g) +
ggtitle(paste(name, "Governance Type")) +
geom_sf(data = country, size = 0.002, fill = "#d9f0a3") +
geom_sf(data = kba_wdpa_g, size = 0.0002, aes(fill = GOV_TYPE)) +
geom_sf(data = kt_g, size = 0.0002, fill = "transparent") +
scale_fill_discrete(na.value = "grey") +
labs(colour="2100 - 2015 Annual Mean Temperature", fill = "Temperature \n Difference °C") +
theme_bw()
#### plots having to do with NDVI ----
ndvi_vars <- kba_wdpa %>% select(GOV_TYPE, max_ndvi, mean_ndvi, year)
ggplot(ndvi_vars, aes(year, mean_ndvi, group = GOV_TYPE)) +
geom_smooth(aes(group=GOV_TYPE, color=as.factor(GOV_TYPE))) +
theme_bw()
ggplot(ndvi_vars, aes(year, max_ndvi, group = GOV_TYPE)) +
geom_smooth(aes(group=GOV_TYPE, color=as.factor(GOV_TYPE))) +
theme_bw()
ggplot(ndvi_vars, aes(x = GOV_TYPE, y = max_ndvi)) +
geom_boxplot(aes(color = GOV_TYPE)) +
labs(title = "Max NDVI") +
xlab("Governance Type") +
ylab("Maximum NDVI") +
theme_bw()
ggplot(ndvi_vars, aes(x = GOV_TYPE, y = mean_ndvi)) +
geom_boxplot(aes(color = GOV_TYPE)) +
labs(title = "Mean NDVI") +
xlab("Governance Type") +
ylab("Mean NDVI") +
theme_bw()
aov_ndvi <- aov(mean_ndvi ~ GOV_TYPE, data = ndvi_vars)
#report(aov_ndvi)
plot(TukeyHSD(aov_ndvi), las=1,cex.axis=0.4, sub = "mean_ndvi")
aov_ndvi <- aov(max_ndvi ~ GOV_TYPE, data = ndvi_vars)
#report(aov_ndvi)
plot(TukeyHSD(aov_ndvi), las=1,cex.axis=0.4, sub = "max ndvi")
dev.off()
#### general plots ----
k <- kba_wdpa %>% group_by(SitRecID, WDPAID) %>% summarize(mn = mean(mean_ndvi, na.rm = T))
kba_wdpa_g <- left_join(k, pas %>% select(WDPAID, geometry), by = "WDPAID")
kba_wdpa_g <- kba_wdpa_g %>% st_set_geometry("geometry")
ggplot(data = kba_wdpa_g) +
ggtitle(paste(name, "Average NDVI")) +
geom_sf(data = country, size = 0.002, fill = "#d9f0a3") +
geom_sf(data = kba_wdpa_g, size = 0.0002, aes(fill = mn)) +
scale_fill_distiller(na.value = "grey", direction = 1, palette = "Greens") +
labs(colour="Average NDVI Values (protected areas only)",
fill = "Average NDVI") +
theme_bw()
dev.off()
ggplot(data = kba_wdpa_g) +
ggtitle(paste(name, "Average NDVI")) +
geom_sf(data = country, size = 0.002, fill = "#d9f0a3") +
geom_sf(data = kba_wdpa_g, size = 0.0002, aes(fill = mn)) +
scale_fill_distiller(na.value = "grey", direction = 1, palette = "Greens") +
labs(colour="Average NDVI Values (protected areas only)",
fill = "Average NDVI") +
theme_bw()
#report(aov_ndvi)
plot(TukeyHSD(aov_ndvi), las=1,cex.axis=0.4, sub = "max ndvi")
#report(aov_ndvi)
plot(TukeyHSD(aov_ndvi), "tension", las=1,cex.axis=0.4, sub = "max ndvi")
#report(aov_ndvi)
plot(TukeyHSD(aov_ndvi, "tension"), las=1,cex.axis=0.4, sub = "max ndvi")
TukeyHSD(aov_ndvi)
#report(aov_ndvi)
plot(TukeyHSD(aov_ndvi), las=1,cex.axis=0.4, sub = "max ndvi")
############# Part 1 - Setup #######################
#### Part 1.1 load packages ----
library(sf)
library(dplyr)
library(tidyverse)
library(lwgeom)
library(ggplot2)
library(gifski)
library(transformr)
library(RColorBrewer)
library(animation)
## global vars
MOUNTAIN_ONLY <- T
## set working directory
ifelse(dir.exists("~/Box Sync/mountain_biodiversity/results"),
setwd("~/Box Sync/mountain_biodiversity/results"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/mountain_biodiversity/results"))
results_gmba <- read_csv("finaltab_gmba_2020_Apr2022.csv")
results_wcmc <- read_csv("finaltab_official2020_Apr2022.csv")
#### 2.0 WCMC ----
#### 2.1 Calculate full timeline with cumulative coverage for WCMC/official
## only get mountain results if noted above
if(MOUNTAIN_ONLY) results_wcmc <- results_wcmc %>% filter(mountain == 1)
#### 2.0 WCMC ----
#### 2.1 Calculate full timeline with cumulative coverage for WCMC/official
## only get mountain results if noted above
if(MOUNTAIN_ONLY) results_gmba <- results_gmba %>% filter(mountain == 1)
head(results_gmba)
head(results_gmba)
finfilerange <- paste0("clean_data_for_visuals_range_", td, ".csv")
finfilesystem <- paste0("clean_data_for_visuals_system_", td, ".csv")
d <- read_csv(finfilerange)
d <- read_csv(finfilerange)
d <- read_csv("clean_data_for_visuals_range_May2022.csv")
head(d)
unique(d$FilterString)
d <- d %>% filter(UnitOfAnalysis == "Country" & Year == 2020)
head(d)
unique(d$FilterString)
head(d)
d1 <- d %>% filter(FilterString == "Country_Highland_KBAPA_WCMC_Area")
d2 <- d %>% filter(FilterString == "Country_Highland_KBAPA_GMBA_Area")
head(d2)
d3 <- left_join(d1, d2, by = c("ID", "ID_underscore"))
head(d3)
ggplot(d3, aes(x = "ResultValue.x", y = "ResultValue.y")) + geom_point()
d2 <- d %>% filter(FilterString == "Country_Highland_KBAPA_GMBA_Area", select(ID, ResultValue))
d2 <- d %>% filter(FilterString == "Country_Highland_KBAPA_GMBA_Area") %>% select(ID, ResultValue))
d2 <- d %>% filter(FilterString == "Country_Highland_KBAPA_GMBA_Area") %>% select(ID, ResultValue)
d1 <- d %>% filter(FilterString == "Country_Highland_KBAPA_WCMC_Area") %>% select(ID, ResultValue)
d3 <- left_join(d1, d2, by = c("ID"))
head(d3)
ggplot(d3, aes(x = ResultValue.x, y = ResultValue.y)) + geom_point()
ggplot(d3, aes(x = ResultValue.x, y = ResultValue.y)) + geom_point() + geom_abline(intercept = 0, slope = 1)
ggplot(d3, aes(x = ResultValue.x, y = ResultValue.y)) + geom_point() + geom_abline(intercept = 0, slope = 1) + theme_bw()
head(d3)
d2 <- d %>% filter(FilterString == "Country_Highland_KBAPA_GMBA_Area") %>% select(ID, GMBA_Result = ResultValue)
d1 <- d %>% filter(FilterString == "Country_Highland_KBAPA_WCMC_Area") %>% select(ID, WCMC_Result = ResultValue)
d3 <- left_join(d1, d2, by = c("ID"))
head(d)
head(d3)
d3 <- d3 %>% mutate(col = ifelse(ID %in% c("BLZ", "BTN", "CHE", "SLE"), "red", "black"))
ggplot(d3, aes(x = ResultValue.x, y = ResultValue.y)) + geom_point(aes(color = col)) + geom_abline(intercept = 0, slope = 1) + theme_classic()
ggplot(d3, aes(x = WCMC_Result, y = GMBA_Result)) + geom_point(aes(color = col)) + geom_abline(intercept = 0, slope = 1) + theme_classic()
ggplot(d3, aes(x = WCMC_Result, y = GMBA_Result)) + geom_point(aes(color = col)) + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
d3 <- d3 %>% mutate(col = ifelse(ID %in% c("BLZ", "BTN", "CHE", "SLE"), "highlight", "other"))
ggplot(d3, aes(x = WCMC_Result, y = GMBA_Result)) + geom_point(aes(color = col)) + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
d1 <- d %>% filter(FilterString == "Country_Highland_KBAPA_WCMC_Site") %>% select(ID, WCMC_Result = ResultValue)
head(d1)
d3 <- left_join(d1, d2, by = c("ID"))
d3 <- d3 %>% mutate(col = ifelse(ID %in% c("BLZ", "BTN", "CHE", "SLE"), "highlight", "other"))
ggplot(d3, aes(x = WCMC_Result, y = GMBA_Result)) + geom_point(aes(color = col)) + geom_abline(intercept = 0, slope = 1) + ggtitle("Site WCMC, Area GMBA Calculation") + theme_classic()
head(d3)
is.na(d3$WCMC_Result)
is.na(d3$GMBA_Result)
d3 <- d3 %>% mutate(GMBA_Result = ifelse(is.na(GMBA_Result), 0, GMBA_Result))
ggplot(d3, aes(x = WCMC_Result, y = GMBA_Result)) + geom_point(aes(color = col)) + geom_abline(intercept = 0, slope = 1) + ggtitle("Site WCMC, Area GMBA Calculation") + theme_classic()
ggplot(d3, aes(x = GMBA_Result, y = WCMC_Result)) + geom_point(aes(color = col)) + geom_abline(intercept = 0, slope = 1) + ggtitle("Site WCMC, Area GMBA Calculation") + theme_classic()
head(d)
unique(d$FilterString)
dd <- d %>% select(Country, Name, ResultValue, FilterString)
library(reshape2)
?dcast
dcast(dd, ResultValue ~ Name, mean)
dcast(dd, ResultValue ~ Name, FilterString)
dcast(dd, Name ~ ResultValue, FilterString)
dcast(dd, FilterString ~ ResultValue, ID)
dcast(dd, FilterString ~ ResultValue, "ID")
dcast(dd, FilterString ~ ResultValue, mean, value.var = "ID")
dcast(dd, ID ~ FilterString, value.var = ResultValue)
dcast(dd, ID ~ FilterString, value.var = "ResultValue")
head(dd)
dcast(dd, country ~ FilterString, value.var = "ResultValue")
dcast(dd, Country + Name ~ FilterString, value.var = "ResultValue")
dc <- dcast(dd, Country + Name ~ FilterString, value.var = "ResultValue")
head(dc)
dc <- dc %>% mutate(diff_area_wcmc_to_gmba = Country_Highland_KBAPA_WCMC_Area - Country_Highland_KBAPA_GMBA_Area) %>% mutate(diff_site_wcmc_to_gmba = Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_GMBA_Area)
head(dc)
summary(dc)
dc <- dc %>% mutate(diff_area_wcmc_to_gmba = Country_Highland_KBAPA_WCMC_Area - Country_Highland_KBAPA_GMBA_Area) %>% mutate(diff_site_wcmc_to_gmba = Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_GMBA_Area)
dc <- dcast(dd, Country + Name ~ FilterString, value.var = "ResultValue")
head(dc)
ggplot(dc, aes(x = "Country_Highland_KBAPA_WCMC_Site", y = "Country_Highland_KBAPA_GMBA_Area")) + theme_classic()
ggplot(dc, aes(x = "Country_Highland_KBAPA_WCMC_Site", y = "Country_Highland_KBAPA_GMBA_Area")) + geom_point() + theme_classic()
ggplot(d3, aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_GMBA_Area)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
ggplot(d3, aes(x = "Country_Highland_KBAPA_WCMC_Site", y = Country_Highland_KBAPA_GMBA_Area)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
ggplot(d3, aes(x = "Country_Highland_KBAPA_WCMC_Site", y = "Country_Highland_KBAPA_GMBA_Area")) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
ggplot(dc, aes(x = "Country_Highland_KBAPA_WCMC_Site", y = "Country_Highland_KBAPA_GMBA_Area")) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
head(dc)
ggplot(dc, aes(x = "Country_Highland_KBAPA_WCMC_Site", y = "Country_Highland_KBAPA_GMBA_Area")) + geom_point(color = "Name") + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
ggplot(dc, aes(x = "Country_Highland_KBAPA_WCMC_Site", y = "Country_Highland_KBAPA_GMBA_Area")) + geom_point(aes(color = "Name")) + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
nrow(dc)
ggplot(dc, aes(x = "Country_Highland_KBAPA_WCMC_Site", y = "Country_Highland_KBAPA_GMBA_Area")) + geom_point(aes(color = "Name")) + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
ggplot(as.data.frame(dc), aes(x = "Country_Highland_KBAPA_WCMC_Site", y = "Country_Highland_KBAPA_GMBA_Area")) + geom_point(aes(color = "Name")) + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
ggplot(dc, aes(x="Country_Highland_KBAPA_WCMC_Site", y="Country_Highland_KBAPA_WCMC_Area"))
ggplot(dc, aes(x="Country_Highland_KBAPA_WCMC_Site", y="Country_Highland_KBAPA_WCMC_Area")) + geom_point
ggplot(dc, aes(x="Country_Highland_KBAPA_WCMC_Site", y="Country_Highland_KBAPA_WCMC_Area")) + geom_point()
typeof(dc)
dc <- as.data.frame(dc)
ggplot(dc, aes(x="Country_Highland_KBAPA_WCMC_Site", y="Country_Highland_KBAPA_WCMC_Area")) + geom_point()
typeof(dc)
dc <- dc %>% mutate(diff_wcmcs = sign(Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_WCMC_Area))
head(dc)
ggplot(dc, aes(x="Country_Highland_KBAPA_WCMC_Site", y="Country_Highland_KBAPA_WCMC_Area", color = "diff_wcmcs")) + geom_point()
a <- cbind(x = 1:20, y = 40:60)
a <- cbind(x = 0:20, y = 40:60)
ggplot(a, aes(x=x, y=y, color = "diff_wcmcs")) + geom_point()
ggplot(a, aes(x=x, y=y)) + geom_point()
head(a)
a <- as.data.frame(a)
head(a)
ggplot(a, aes(x=x, y=y)) + geom_point()
names(dc)
ggplot(dc, aes(x=Country_Highland_KBAPA_WCMC_Area, y=Country_Highland_KBAPA_WCMC_Site)) + geom_point()
ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_GMBA_Area)) + geom_point(aes(color = diff_wcmcs)) + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area)) + geom_point(aes(color = diff_wcmcs)) + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
dc <- dc %>% mutate(col = ifelse(ID %in% c("BLZ", "BTN", "CHE", "SLE"), "highlight", "other"))
head(dc)
dc <- dc %>% mutate(col = ifelse(Country %in% c("BLZ", "BTN", "CHE", "SLE"), "highlight", "other"))
d c<- dc %>% mutatue(diff_gmba = Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_GMBA_Area)
dc<- dc %>% mutatue(diff_gmba = Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_GMBA_Area)
dc<- dc %>% mutate(diff_gmba = Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_GMBA_Area)
head(dc)
dc<- dc %>% mutate(diff_gmba = sign(Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_GMBA_Area))
dc<- dc %>% mutate(diff_wcmcs = sign(Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_WCMC_Area))
ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
names(dc)
dc <- dc %>% mutate(ifelse(is.na(Country_Highland_KBAPA_WCMC_Area), 0, Country_Highland_KBAPA_WCMC_Area))
dc <- dc %>% mutate(ifelse(is.na(Country_Highland_KBAPA_WCMC_Site), 0, Country_Highland_KBAPA_WCMC_Site))
dc <- dc %>% mutate(ifelse(is.na(Country_Highland_KBAPA_GMBA_Area), 0, Country_Highland_KBAPA_GMBA_Area))
ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
unique(is.na(dc$Country_Highland_KBAPA_GMBA_Area))
dc <- dc %>% mutate(Country_Highland_KBAPA_WCMC_Area = ifelse(is.na(Country_Highland_KBAPA_WCMC_Area), 0, Country_Highland_KBAPA_WCMC_Area))
dc <- dc %>% mutate(Country_Highland_KBAPA_WCMC_Site = ifelse(is.na(Country_Highland_KBAPA_WCMC_Site), 0, Country_Highland_KBAPA_WCMC_Site))
dc <- dc %>% mutate(Country_Highland_KBAPA_GMBA_Area = ifelse(is.na(Country_Highland_KBAPA_GMBA_Area), 0, Country_Highland_KBAPA_GMBA_Area))
head(dc)
names(dc)
dc[,-9:11]
dc[,1:8]
head(dc[,1:8])
dc <- dc[,1:8]
dc %>% mutate(Country_Highland_KBAPA_GMBA_Area = replace_na(Country_Highland_KBAPA_GMBA_Area, 0))
dc <- dc %>% mutate(Country_Highland_KBAPA_GMBA_Area = replace_na(Country_Highland_KBAPA_GMBA_Area, 0))
unique(is.na(dc$Country_Highland_KBAPA_GMBA_Area))
names(dc)
dc <- dc %>% mutate(Country_Highland_KBAPA_WCMC_Site = replace_na(Country_Highland_KBAPA_WCMC_Site, 0))
dc <- dc %>% mutate(Country_Highland_KBAPA_WCMC_Area = replace_na(Country_Highland_KBAPA_WCMC_Area, 0))
ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
head(dc)
ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area)) + geom_point(color=col) + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area)) + geom_point(color="col") + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
a <- ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
b <- ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_GMBA_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area Based Calculation") + theme_classic()
grid.arrange(a,b)
grid.arrange(a,b, nrow = 1)
a <- ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Area vs Site Based") + theme_classic()
b <- ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_GMBA_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Site vs GMBA Area") + theme_classic()
grid.arrange(a,b, nrow = 1)
dc %>% filter(Country_Highland_KBAPA_WCMC_Site == 100)
dc %>% filter(Country_Highland_KBAPA_GMBA_Area == 0)
names(dc)
summary(dc$diff_wcmcs)
dc <- dc %>% mutate(diff_wcmcs = sign(Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_WCMC_Area))
dc <- dc %>% mutate(diff_gmba = sign(Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_GMBA_Area))
summary(dc$diff_wcmcs)
length(dc$diff_wcmcs > 1)
length(dc$diff_wcmcs < 1)
nrow(dc %>% filter(diff_wcmcs > 1))
nrow(dc %>% filter(diff_wcmcs < 1))
nrow(dc %>% filter(diff_wcmcs < 0))
nrow(dc %>% filter(diff_wcmcs== 0))
nrow(dc %>% filter(diff_wcmcs >  0))
nrow(dc %>% filter(diff_gmba >  0))
nrow(dc %>% filter(diff_gmba ==  0))
nrow(dc %>% filter(diff_gmba <  0))
x <- ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Area, y = Country_Highland_KBAPA_GMBA_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Site vs GMBA Area") + theme_classic()
c <- ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Area, y = Country_Highland_KBAPA_GMBA_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("Site vs GMBA Area") + theme_classic()
grid.arrange(a,b,c, nrow = 1)
c <- ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Area, y = Country_Highland_KBAPA_GMBA_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("WCMC Area vs GMBA Area") + theme_classic()
grid.arrange(a,b,c, nrow = 1)
b <- ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_GMBA_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("WCMC Site cs GMBA Area") + theme_classic()
a <- ggplot(as.data.frame(dc), aes(x = Country_Highland_KBAPA_WCMC_Site, y = Country_Highland_KBAPA_WCMC_Area, color = col)) + geom_point() + geom_abline(intercept = 0, slope = 1) + ggtitle("WCMC Site cs WCMC Area") + theme_classic()
grid.arrange(a,b,c, nrow = 1)
dc <- dc %>% mutate(areas_diff = sign(Country_Highland_KBAPA_WCMC_Area - Country_Highland_KBAPA_GMBA_Area))
head(dc)
nrow(dc %>% filter(areas_diff ==0))
nrow(dc %>% filter(areas_diff >0))
nrow(dc %>% filter(areas_diff <0))
dc <- dc %>% mutate(areas_diff = Country_Highland_KBAPA_WCMC_Area - Country_Highland_KBAPA_GMBA_Area)
dc <- dc %>% mutate(diff_wcmcs = Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_WCMC_Area)
dc <- dc %>% mutate(diff_gmba = Country_Highland_KBAPA_WCMC_Site - Country_Highland_KBAPA_GMBA_Area)
dc %>% filter(diff_wcmcs > 50)
summary(dc$diff_wcmcs)
dc %>% filter(abs(diff_wcmcs) > 50)
dc %>% filter(abs(diff_gmba) > 50)
summary(abs(dc$diff_wcmcs))
summary(abs(dc$diff_gmba))
summary(abs(dc$areas_diff))
ifelse(dir.exists("~/Box Sync/heatwave_covid"),
setwd("~/Box Sync/heatwave_covid"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/heatwave_covid"))
source("./regression_functions_shelter.R")
library(dplyr)
library(lfe)
library(ggplot2)
library(dotwhisker)
library(tidyverse)
library(lubridate)
library(reshape2)
library(stringr)
library(broom)
library(gridExtra)
library(wesanderson)
library(SafeGraphR)
library(interactions)
library(quantreg)
library(jtools)
library(sf)
library(gridExtra)
library(HeatStress)
#library(sjPlot)
#library(sjmisc)
## global vars
included_fips <- c("06081", "06085", "06001", "06013","06075", "06087", "06041", "06097", "06055", "06095") #bay area
quantiles <- c(.025, .5, .975)
ys <- c(2020, 2021)
td <- format(Sys.Date(), "%m_%d_%Y")
bootstrap_quantiles <- c(.025, .5, .975)
## read in data
data_all <- readRDS("./heatwaves_manual/data_with_demo_05_2022.RDS")
data <- data_all #copy of data to be filtered/edited
cbg <- st_read("./heatwaves_manual/shapefiles/cb_2019_us_bg_500k/cb_2019_us_bg_500k.shp", stringsAsFactors = F)
precip <- readRDS("./heatwaves_manual/precip20_21.rds")
rh <- readRDS("./heatwaves_manual/rh20_21.rds")
#### data cleaning ----
## create log version of MI
data <- data %>% mutate(visitors_percap_cr =  sign(visitors_percap) * (abs(visitors_percap))^(1/3)) %>%
mutate(visitors_percap_log = log(visitors_percap + 1.00001))
## remove smoke days
smoke_days <- c(seq(as.Date("2020-08-19"), as.Date("2020-08-25"), by = 1),
seq(as.Date("2020-09-10"), as.Date("2020-09-14"), by = 1),
as.Date("2020-08-31", format = "%Y-%m-%d"))
## clean up nas
data <- data %>% filter(!(date %in% smoke_days)) %>%
filter(!is.na(unweighted_pop)) %>%
filter(year %in% ys & !is.na(visitors_percap) & !is.na(median_income)) %>%
mutate(monthweekyr = paste0(monthweek, year))
## select only months where we know temps hit 95th percentile
data <- data %>% filter(month %in% c(5:9))
## add in income
income <- unique(data %>% dplyr::select(census_block_group, median_income, unweighted_pop))
income <- income %>% arrange(median_income) %>% mutate(cum_population = cumsum(unweighted_pop)) %>%
mutate(income_group_pop = ntile(median_income, 5)) %>% dplyr::select(census_block_group, income_group_pop) %>%
mutate(income_group_pop = as.factor(income_group_pop))
data <- left_join(data, income, by = "census_block_group")
data_all <- left_join(data_all, income, by = "census_block_group")
## get total number of counties experiencing extreme temperatures
b <- data %>% filter(p_high >= 95) %>% count(date, region)
data <- left_join(data, b, by = c("date", "region"))
data <- data %>% mutate(n = ifelse(is.na(n), 0, n)) %>% rename(n_over_their_95th = n)
perc95 <- quantile(data$mean_high_c, .95)
b <- data %>% filter(mean_high_c >= perc95) %>% count(date, region)
data <- left_join(data, b, by = c("date", "region"))
data <- data %>% mutate(n = ifelse(is.na(n), 0, n)) %>% rename(n_over_total = n)
## assign avg MI group (based on percentiles equivalent to quantile reg)
m <- data %>% group_by(census_block_group) %>%
summarize(median_mi = median(visitors_percap, na.rm = T)) %>%
mutate(mi_group = cut(median_mi,
breaks = c(-Inf, quantile(median_mi, c(.05, .95)), Inf),
labels = F))
data <- left_join(data, m, by = "census_block_group")
data <- data %>% mutate(mi_group = as.factor(mi_group))
## create combined categorical variable
data <- data %>% unite(mi_income_groups, c("mi_group", "income_group_pop"), remove = F)
## mark days where one or more county is >34 and separate TODO: DELETE if not using
hotdays <- data %>% group_by(date) %>%
summarize(max_temp = max(mean_high_c, na.rm = T)) %>%
filter(max_temp >= 34) %>% pull(date)
data_subset <- data %>% filter(date %in% hotdays)
## combine temp and census block group shapefile
data <- data %>% mutate(STATEFP = substr(census_block_group, 1, 2), COUNTYFP = substr(census_block_group, 3, 5),
TRACTCE = substr(census_block_group, 1, 11))
cbg$census_block_group <- paste0(cbg$STATEFP, cbg$COUNTYFP, cbg$TRACTCE, cbg$BLKGRPCE)
cbg <- cbg %>% filter(census_block_group %in% data$census_block_group)
## add in precip and wet bulb
data <- left_join(data, precip %>% select(date, census_block_group = GEOID, precip), by = c("date", "census_block_group"))
data <- left_join(data, rh %>% select(date, census_block_group = GEOID, rh), by = c("date", "census_block_group"))
## add in note of weekend or weekday
data <- data %>% mutate(weekday = ifelse(wday(date) %in% c(2:6), T, F))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.05
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = ds_all)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup)
m
w <- c()
for(i in c(seq(0.0, 1, by = 0.05))) {
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * i
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup)
w <- rbind(w, cbind(percent = i, coef = m$coefficients,
pval = summary(m)$pval,r2 = summary(m)$r.squared,
days = length(unique(data_subgroup$date))))
}
w <- as.data.frame(w)
plot(w$percent, w$visitors_percap_cr)
w <- c()
for(i in c(seq(0.0, 1, by = 0.1))) {
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * i
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup)
w <- rbind(w, cbind(percent = i, coef = m$coefficients,
pval = summary(m)$pval,r2 = summary(m)$r.squared,
days = length(unique(data_subgroup$date))))
}
w <- as.data.frame(w)
plot(w$percent, w$visitors_percap_cr)
w <- c()
for(i in c(seq(0.0, 1, by = 0.01))) {
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * i
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup)
w <- rbind(w, cbind(percent = i, coef = m$coefficients,
pval = summary(m)$pval,r2 = summary(m)$r.squared,
days = length(unique(data_subgroup$date))))
}
w <- as.data.frame(w)
plot(w$percent, w$visitors_percap_cr)
i <- 0.85
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * i
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
head(data_subgroup)
unique(data_subgroup$date)
length(unique(data$date))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.05
length(unique(data_subgroup$date))
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
length(unique(data_subgroup$date))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.85
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
nrow(data_subgroup)
nrow(data)
61511/1387421
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.05
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
nrow(data_subgroup)
482501/1387421
plot(w$percent, w$visitors_percap_cr, main = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a")
head(w)
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(color = days) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" )
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" )
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw()
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + scale_color_manual(values(c("#56B4E9", "#E69F00")))
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + scale_color_manual(values=c("#56B4E9", "#E69F00"))
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(color = days) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" )
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw()
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(c(.05, .85))
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(aes(xintercept(c(.05, .85)))
)
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(aes(xintercept = c(.05, .85))
)
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(aes(xintercept = c(0.05, 0.85)))
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = .05)
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = c(.05, 0.85))
a <- ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(color = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = c(.05, 0.85))
grid.arrange(a,a)
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(size = days) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = c(.05, 0.85)) + scale_size_continuous(range = c(3,7))
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(size = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = c(.05, 0.85)) + scale_size_continuous(range = c(3,7))
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(size = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = c(.05, 0.85)) + scale_size_continuous(range = c(1,7))
ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(size = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = c(.05, 0.85)) + scale_size_continuous(range = c(1,10))
a <- ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(size = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = c(.05, 0.85)) + scale_size_continuous(range = c(1,10))
grid.arrange(a,a)
a <- ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(size = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = c(.05, 0.85)) + scale_size_continuous(range = c(1,6))
grid.arrange(a,a)
a <- ggplot(w, aes(x = percent, y = visitors_percap_cr)) + geom_point(aes(size = days)) + labs(title = "Coefficient Value with Adjusted Extreme Heat Threshold", xlab = "Minimum % of Block Groups with Recorded High Temperatures", ylab = "Coefficient of Equation 1a" ) + theme_bw() + geom_vline(xintercept = c(.05, 0.85)) + scale_size_continuous(range = c(1,7))
grid.arrange(a,a)
grid.arrange(a,a, a, a)
grid.arrange(a,a,)
grid.arrange(a,a)
#### Top and bottom 5% of mobility vs middle 95% (interacted mi and year subgroups) ----
## mi group interacted
m_inter <- felm(visitors_percap_cr ~ mean_high_c:as.factor(mi_group) | census_block_group + monthweekyr, data = data)
m_inter
m1 <- felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweek, data = data %>% filter(year ==2020))
m1
m2 <- felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweek, data = data %>% filter(year ==2021))
m2
#### Top and bottom 5% of mobility vs middle 95% (interacted mi and year subgroups) ----
## mi group interacted
m_inter <- felm(visitors_percap_cr ~ mean_high_c:as.factor(mi_group) | census_block_group + monthweek, data = data)
m_inter
summary(m_inter)
summary(m1)
summary(m2)
