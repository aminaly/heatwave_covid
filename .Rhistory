ifelse(dir.exists("~/Box Sync/heatwave_covid"),
setwd("~/Box Sync/heatwave_covid"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/heatwave_covid"))
source("./regression_functions_shelter.R")
library(dplyr)
library(lfe)
library(ggplot2)
library(dotwhisker)
library(tidyverse)
library(lubridate)
library(reshape2)
library(stringr)
library(broom)
library(gridExtra)
library(wesanderson)
library(SafeGraphR)
library(interactions)
library(quantreg)
library(jtools)
library(sf)
library(gridExtra)
library(HeatStress)
#library(sjPlot)
#library(sjmisc)
## global vars
included_fips <- c("06081", "06085", "06001", "06013","06075", "06087", "06041", "06097", "06055", "06095") #bay area
quantiles <- c(.025, .5, .975)
ys <- c(2020, 2021)
td <- format(Sys.Date(), "%m_%d_%Y")
bootstrap_quantiles <- c(.025, .5, .975)
## read in data
data_all <- readRDS("./heatwaves_manual/data_with_demo_05_2022.RDS")
data <- data_all #copy of data to be filtered/edited
cbg <- st_read("./heatwaves_manual/shapefiles/cb_2019_us_bg_500k/cb_2019_us_bg_500k.shp", stringsAsFactors = F)
precip <- readRDS("./heatwaves_manual/precip20_21.rds")
rh <- readRDS("./heatwaves_manual/rh20_21.rds")
#### data cleaning ----
## create log version of MI
data <- data %>% mutate(visitors_percap_cr =  sign(visitors_percap) * (abs(visitors_percap))^(1/3)) %>%
mutate(visitors_percap_log = log(visitors_percap + 1.00001))
## remove smoke days
smoke_days <- c(seq(as.Date("2020-08-19"), as.Date("2020-08-25"), by = 1),
seq(as.Date("2020-09-10"), as.Date("2020-09-14"), by = 1),
as.Date("2020-08-31", format = "%Y-%m-%d"))
## clean up nas
data <- data %>% filter(!(date %in% smoke_days)) %>%
filter(!is.na(unweighted_pop)) %>%
filter(year %in% ys & !is.na(visitors_percap) & !is.na(median_income)) %>%
mutate(monthweekyr = paste0(monthweek, year))
## select only months where we know temps hit 95th percentile
data <- data %>% filter(month %in% c(5:9))
## add in income
income <- unique(data %>% dplyr::select(census_block_group, median_income, unweighted_pop))
income <- income %>% arrange(median_income) %>% mutate(cum_population = cumsum(unweighted_pop)) %>%
mutate(income_group_pop = ntile(median_income, 5)) %>% dplyr::select(census_block_group, income_group_pop) %>%
mutate(income_group_pop = as.factor(income_group_pop))
data <- left_join(data, income, by = "census_block_group")
data_all <- left_join(data_all, income, by = "census_block_group")
## get total number of counties experiencing extreme temperatures
b <- data %>% filter(p_high >= 95) %>% count(date, region)
data <- left_join(data, b, by = c("date", "region"))
data <- data %>% mutate(n = ifelse(is.na(n), 0, n)) %>% rename(n_over_their_95th = n)
perc95 <- quantile(data$mean_high_c, .95)
b <- data %>% filter(mean_high_c >= perc95) %>% count(date, region)
data <- left_join(data, b, by = c("date", "region"))
data <- data %>% mutate(n = ifelse(is.na(n), 0, n)) %>% rename(n_over_total = n)
## assign avg MI group (based on percentiles equivalent to quantile reg)
m <- data %>% group_by(census_block_group) %>%
summarize(median_mi = median(visitors_percap, na.rm = T)) %>%
mutate(mi_group = cut(median_mi,
breaks = c(-Inf, quantile(median_mi, c(.05, .95)), Inf),
labels = F))
data <- left_join(data, m, by = "census_block_group")
data <- data %>% mutate(mi_group = as.factor(mi_group))
## create combined categorical variable
data <- data %>% unite(mi_income_groups, c("mi_group", "income_group_pop"), remove = F)
## mark days where one or more county is >34 and separate TODO: DELETE if not using
hotdays <- data %>% group_by(date) %>%
summarize(max_temp = max(mean_high_c, na.rm = T)) %>%
filter(max_temp >= 34) %>% pull(date)
data_subset <- data %>% filter(date %in% hotdays)
## combine temp and census block group shapefile
data <- data %>% mutate(STATEFP = substr(census_block_group, 1, 2), COUNTYFP = substr(census_block_group, 3, 5),
TRACTCE = substr(census_block_group, 1, 11))
cbg$census_block_group <- paste0(cbg$STATEFP, cbg$COUNTYFP, cbg$TRACTCE, cbg$BLKGRPCE)
cbg <- cbg %>% filter(census_block_group %in% data$census_block_group)
## add in precip and wet bulb
data <- left_join(data, precip %>% select(date, census_block_group = GEOID, precip), by = c("date", "census_block_group"))
data <- left_join(data, rh %>% select(date, census_block_group = GEOID, rh), by = c("date", "census_block_group"))
## add in note of weekend or weekday
data <- data %>% mutate(weekday = ifelse(wday(date) %in% c(2:6), T, F))
## create map data
map_data <- data %>% group_by(year, census_block_group) %>%
summarize(visitors_percap = mean(visitors_percap, na.rm = T))
##pull out each year, join, and find the difference
cast_temp <- dcast(map_data, census_block_group ~ year)
cast_temp$diff <- cast_temp$`2021` - cast_temp$`2020`
cast_temp <- cast_temp %>% mutate(diff_r= rank(diff)) %>%
mutate(diff_log = log(diff_r)) %>% mutate(diff_cut = cut(diff, breaks = c(-Inf, seq(-3, 3, 1), Inf))) %>%
mutate(diff_sign = ifelse(diff > 0, 1, ifelse(diff < 0, -1, 0)))
map_data <- merge(cbg, cast_temp, by = "census_block_group")
## summarize by cbg and add to map data
mp <- data %>% group_by(census_block_group) %>%
summarize(income = unique(income_group_pop, na.rm = T),
mi_group = unique(mi_group, na.rm = T),
percentile = mean(p_high, na.rm = T),
mean_temp = mean(mean_high_c, na.rm = T),
demo = unique(maxdemo))
map_data <- merge(map_data, mp, by = "census_block_group")
days_above_34 <- data %>% filter(mean_high_c  >= 34 & year %in% c(2020,2021)) %>%
count(census_block_group)
map_data <- merge(map_data, days_above_34, by = "census_block_group")
map_data <- map_data %>% mutate(percentilen = as.factor(cut(percentile, 5)))
head(data)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + date, data = data)
summary(m)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + date, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data))
me
head(data)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_cr ~ rh | census_block_group + monthweekyr, data = data))
# #### MI v Temp + Precip (SUMMARY ONLY) ----
# m <- felm(visitors_percap_cr ~ mean_high_c + precip  | census_block_group + monthweekyr, data = data)
# txt <- paste("Adding in precip mean_high_c + precip \n",
#              round(m$coefficients[1], 5), "mean_high_c \n",
#              round(m$coefficients[2], 5), "precip \n",
#              round(summary(m)$r2, 5), "r2 \n",
#              round(summary(m)$P.r.squared, 5), "proj r")
# plot.new()
# text(.5, .5, txt, font=2, cex=1.5)
# #### MI v Wetbulb ----
data <- data %>% mutate(wb_temp = swbgt(mean_high_c, rh))
summary(felm(visitors_percap_cr ~ wb_temp | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c + precip| census_block_group + monthweekyr, data = data))
orig <- ggplot(data = data,
aes(x = visitors_percap, group = as.factor(year),
color = as_factor(year), alpha=0.2)) +
geom_density(size=.75) +
ggtitle("Full Distribution of MI") +
geom_vline(xintercept = quantile(data$visitors_percap, .05)) +
geom_vline(xintercept = quantile(data$visitors_percap, .95)) +
theme_bw()
orig
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(-Inf, -0.3)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim( -0.3)
min(data$visitors_percap)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(-1, -0.3)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(-0.3, 4.4)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(4.4, 24.2)
?geom_density
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(4.4, 24.2) + stat_density(adjust = 2)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(-0.3, 4.4) + stat_density(adjust = 2)
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data))
m <- felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data)
m$coefficients
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(4.4, 24.2) + geom_vline(xintercept = 4)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(-1, -0.3) + geom_vline(xintercept = 4)
ggplot(data = data ,
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(-1, -0.3) + geom_vline(xintercept = 4)
ggplot(data = data ,
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + xlim(-0.3, 4.4) + geom_vline(xintercept = 4)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_vline(xintercept = 4)
ggplot(data = data %>% filter(visitors_percap < -0.3),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
ggtitle("Distribution of MI < -0.3 (5th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_vline(xintercept = 4)
ggplot(data = data %>% filter(visitors_percap > -0.3 & visitors_percap < 4.4),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
ggtitle("Distribution of -0.3 < MI < 4.4 (5th-95th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_vline(xintercept = 4)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_vline(yintercept = 4)
ggplot(data = data %>% filter(visitors_percap < -0.3),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
ggtitle("Distribution of MI < -0.3 (5th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_vline(yintercept = 4)
ggplot(data = data %>% filter(visitors_percap > -0.3 & visitors_percap < 4.4),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
ggtitle("Distribution of -0.3 < MI < 4.4 (5th-95th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_vline(yintercept = 4)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_hline(yintercept = 4)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_hline(yintercept = 1)
ggplot(data = data %>% filter(visitors_percap < -0.3),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
ggtitle("Distribution of MI < -0.3 (5th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_hline(yintercept = 1)
ggplot(data = data %>% filter(visitors_percap > -0.3 & visitors_percap < 4.4),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
ggtitle("Distribution of -0.3 < MI < 4.4 (5th-95th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_hline(yintercept = 1)
ggplot(data = data %>% filter(visitors_percap <= 24.2),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
geom_vline(xintercept = c(-0.3, 4.4, 24.4)) +
ggtitle("Distribution of MI <= 24.2 (99.9th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_hline(yintercept = 3.2)
ggplot(data = data %>% filter(visitors_percap < -0.3),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
ggtitle("Distribution of MI < -0.3 (5th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_hline(yintercept = 3.2)
ggplot(data = data %>% filter(visitors_percap > -0.3 & visitors_percap < 4.4),
aes(x = visitors_percap, group = as.factor(income_group_pop),
color = as_factor(income_group_pop), alpha=0.2)) +
geom_density(size=.75) +
ggtitle("Distribution of -0.3 < MI < 4.4 (5th-95th)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw() + geom_hline(yintercept = 3.2)
theme_bw() + xlim(-0.3, 4.4) + geom_vline(xintercept = 4)
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + date, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + date, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweek, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c:year | census_block_group + monthweek, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c:year | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c:year | census_block_group + date, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + date, data = data))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.05
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + date, data = data_subgroup))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweek, data = data %>% year == 2020))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweek, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweek, data = data %>% filter(year == 2021)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweek, data = data %>% filter(year == 2021)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweek, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweek, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweek, data_subgroup = data %>% filter(year == 2020)))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweek, data_subgroup = data_subgroup %>% filter(year == 2020)))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweek, data = data_subgroup %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweek, data = data_subgroup %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweek, data = data_subgroup %>% filter(year == 2021)))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweek, data = data_subgroup %>% filter(year == 2021)))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweek, data = data))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data))$coefficients
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))$coefficients
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))$coefficients
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data %>% filter(year == 2021)))$coefficients
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data %>% filter(year == 2021)))$coefficients
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))$coefficients
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))$coefficients
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2020)))$coefficients
summary(felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2021)))$coefficients
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2020)))$coefficients
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2021)))$coefficients
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup)$coefficients
)
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup))$coefficients
summary(felm(visitors_percap_log ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup))$coefficients
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data))$coefficients
summary(felm(visitors_percap_log ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data))$coefficients
summary(felm(visitors_percap_log ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data))$coefficients
summary(felm(visitors_percap_log ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data))$estimate
felm(visitors_percap_log ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)$estimate
felm(visitors_percap_log ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)
m <- felm(visitors_percap_log ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)
names(m)
felm(visitors_percap_log ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)$coefficients
felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)$coefficients
felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data)$coefficients
felm(visitors_percap_log ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data)$coefficients
felm(visitors_percap_log ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data %>% filter(year == 2020))$coefficients
felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data %>% filter(year == 2020))$coefficients
felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data %>% filter(year == 2021))$coefficients
felm(visitors_percap_log ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data %>% filter(year == 2021))$coefficients
felm(visitors_percap_log ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2021))$coefficients
felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2021))$coefficients
felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2020))$coefficients
felm(visitors_percap_log ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2020))$coefficients
-0.0062 ^ (1/3)
-0.0062 ^ (1/3) - 1
(-0.0062 ^ (1/3)) - 1
2 ^ (1/3)
2^3
-0.0024 ^ (1/3)
-0.0024 ^ (1/3) / -0.0062 ^ (1/3)
-0.0062 ^ (1/3) / (-0.0024 ^ (1/3))
(-0.0062 ^ (1/3)) / (-0.0024 ^ (1/3))
(-0.0062 ^ (3)) / (-0.0024 ^ (3))
