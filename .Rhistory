theme_bw()
ggplot(data = data_mmh,
aes(x = date, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Hot Days") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mmh,
aes(x = monthday, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Hot Days") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
dev.off()
data <- left_join(data, demo %>% select(census_block_group, fips, maxdemo), by = c("census_block_group", "fips"))
data_mm <- data %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_mobility = mean(visitors_percap, na.rm = T),
med_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
data_mm
ggplot(data = data_mm,
aes(x = date, y=avg_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess)") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
pdf(paste0("./visuals/pub_figures/demographic_loess_mobility", td, ".pdf"))
##Finalize datasets for regressions & run
data_summer_mm <- data_summer %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_summer_mobility = mean(visitors_percap, na.rm = T),
med_summer_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
data_mm <- data %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_mobility = mean(visitors_percap, na.rm = T),
med_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
ggplot(data = data_mm,
aes(x = date, y=avg_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess)") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mm,
aes(x = monthday, y=avg_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_mm,
aes(x = date, y=med_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess)") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mm,
aes(x = monthday, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
data_summer_mmh <- data_summer %>% filter(hot == "Hot Day") %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_summer_mobility = mean(visitors_percap, na.rm = T),
med_summer_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
data_mmh <- data %>%  filter(hot == "Hot Day") %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_mobility = mean(visitors_percap, na.rm = T),
med_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
ggplot(data = data_mmh,
aes(x = date, y=avg_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Hot Days") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mmh,
aes(x = monthday, y=avg_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Hot Days") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_mmh,
aes(x = date, y=med_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Hot Days") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mmh,
aes(x = monthday, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Hot Days") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/demographic_loess_mobility", td, ".pdf"))
##Finalize datasets for regressions & run
data_summer_mm <- data_summer %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_summer_mobility = mean(visitors_percap, na.rm = T),
med_summer_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
data_mm <- data %>%  filter(!is.na(maxdemo)) %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_mobility = mean(visitors_percap, na.rm = T),
med_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
ggplot(data = data_mm,
aes(x = date, y=avg_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess)") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mm,
aes(x = monthday, y=avg_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_mm,
aes(x = date, y=med_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess)") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mm,
aes(x = monthday, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess)") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
data_summer_mmh <- data_summer %>% filter(hot == "Hot Day") %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_summer_mobility = mean(visitors_percap, na.rm = T),
med_summer_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
data_mmh <- data %>%  filter(hot == "Hot Day") %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_mobility = mean(visitors_percap, na.rm = T),
med_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
ggplot(data = data_mmh,
aes(x = date, y=avg_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Hot Days") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mmh,
aes(x = monthday, y=avg_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Hot Days") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_mmh,
aes(x = date, y=med_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Hot Days") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mmh,
aes(x = monthday, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Hot Days") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/demographic_loess_mobility", td, ".pdf"))
##Finalize datasets for regressions & run
data_summer_mm <- data_summer %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_summer_mobility = mean(visitors_percap, na.rm = T),
med_summer_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
data_mm <- data %>%  filter(!is.na(maxdemo)) %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_mobility = mean(visitors_percap, na.rm = T),
med_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
ggplot(data = data_mm,
aes(x = date, y=avg_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess)") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mm,
aes(x = monthday, y=avg_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Summer") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_mm,
aes(x = date, y=med_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess)") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mm,
aes(x = monthday, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Summer") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
data_summer_mmh <- data_summer %>% filter(hot == "Hot Day") %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_summer_mobility = mean(visitors_percap, na.rm = T),
med_summer_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
data_mmh <- data %>%  filter(hot == "Hot Day") %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_mobility = mean(visitors_percap, na.rm = T),
med_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
ggplot(data = data_mmh,
aes(x = date, y=avg_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Hot Days") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mmh,
aes(x = monthday, y=avg_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Summer Hot Days") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_mmh,
aes(x = date, y=med_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Hot Days") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mmh,
aes(x = monthday, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Summer Hot Days") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/demographic_loess_mobility", td, ".pdf"))
##Finalize datasets for regressions & run
data_summer_mm <- data_summer %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_summer_mobility = mean(visitors_percap, na.rm = T),
med_summer_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
data_mm <- data %>%  filter(!is.na(maxdemo)) %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_mobility = mean(visitors_percap, na.rm = T),
med_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
ggplot(data = data_mm,
aes(x = date, y=avg_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess)") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mm,
aes(x = monthday, y=avg_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Summer") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_mm,
aes(x = date, y=med_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess)") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mm,
aes(x = monthday, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Summer") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
data_summer_mmh <- data_summer %>% filter(hot == "Hot Day") %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_summer_mobility = mean(visitors_percap, na.rm = T),
med_summer_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
data_mmh <- data %>%  filter(hot == "Hot Day" & !is.na(maxdemo)) %>%
group_by(maxdemo, date, year, monthday) %>%
summarize(avg_mobility = mean(visitors_percap, na.rm = T),
med_mobility = median(visitors_percap, na.rm = T),
median_income = median(median_income, na.rm = T))
ggplot(data = data_mmh,
aes(x = date, y=avg_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Hot Days") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mmh,
aes(x = monthday, y=avg_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Avg Mobility (Loess) Summer Hot Days") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_mmh,
aes(x = date, y=med_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Hot Days") +
#facet_wrap( ~ year, nrow = 2) +
theme_bw()
ggplot(data = data_summer_mmh,
aes(x = monthday, y=med_summer_mobility, group=maxdemo)) +
geom_smooth(aes(color = maxdemo)) +
ggtitle("Median Mobility (Loess) Summer Hot Days") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
dev.off()
ggplot(data = data_summer_mm %>% filter(year == 2018),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
data_summer_mm
data_summer_mmh
data_summer_mmh
data_summer_mm
ggplot(data = data_summer %>% filter(year == 2018),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
## 2018
ggplot(data = data_summer %>% filter(year == 2018 & visitors_percap < quantile(visitors_percap, .99)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
## 2018
ggplot(data = data_summer %>% filter(year == 2018 & visitors_percap < quantile(visitors_percap, .95)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
#### KS Tests ----
data_summer_ks <- unique(data_summer %>%
select(year, maxdemo))
data_summer_ks
a <- data_summer %>% select(year, maxdemo) %>%
tidyr::nest(score_src)
a <- data_summer %>% select(year, maxdemo) %>%
tidyr::nest(visitors_percap)
a <- data_summer %>% select(year, maxdemo, visitors_percap) %>%
tidyr::nest(visitors_percap)
head(A)
head(a)
a <- data_summer %>% select(year, maxdemo, visitors_percap) %>%
tidyr::nest(visitors = visitors_percap)
head(a)
a$visitors[1,]
a$visitors[1]
a <- data_summer %>% select(year, maxdemo, visitors_percap) %>%
tidyr::nest(visitors = visitors_percap, hot = hot)
head(data_summer)
a <- data_summer %>% select(year, maxdemo, visitors_percap, hot) %>%
tidyr::nest(visitors = visitors_percap, hot)
a <- data_summer %>% select(year, maxdemo, visitors_percap, hot) %>%
tidyr::nest(visitors = visitors_percap, hot = hot)
head(a)
a[1,4]
a$hot[1]
pdf(paste0("./visuals/pub_figures/densityplots", td, ".pdf"))
## 2018
ggplot(data = data_summer %>% filter(year == 2018 & visitors_percap < quantile(visitors_percap, .95)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days 2018") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
## 2019
ggplot(data = data_summer %>% filter(year == 2019 & visitors_percap < quantile(visitors_percap, .95)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days 2019") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
## 2020
ggplot(data = data_summer %>% filter(year == 2020 & visitors_percap < quantile(visitors_percap, .95)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days 2020") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
## 2021
ggplot(data = data_summer %>% filter(year == 2021 & visitors_percap < quantile(visitors_percap, .95)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days 2021") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
dev.off()
?pull
head(data_summer)
unique(data_summer$hot)
i <- "p_white"
y <- 2019
d <- data_summer %>% filter(maxdemo == i & year = y)
d <- data_summer %>% filter(maxdemo == i & year = y)
d <- data_summer %>% filter(maxdemo == i & year == y)
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
ks
names(ks)
ks$p.value
ks_results <- c()
for(i in unique(data_summer$maxdemo)) {
for(y in 2018:2021) {
d <- data_summer %>% filter(maxdemo == i & year == y & visitors_percap < quantile(visitors_percap, .95))
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
rbind(ks_results, c(maxdemo = i, year = y, statistic = ks$statistic, pval = ks$p.value))
}
}
ks_results
warnings()
for(i in unique(data_summer$maxdemo)) {
for(y in 2018:2021) {
d <- data_summer %>% filter(maxdemo == i & year == y & visitors_percap < quantile(visitors_percap, .95))
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
ks_results <- rbind(ks_results, c(maxdemo = i, year = y, statistic = ks$statistic, pval = ks$p.value))
}
}
ks_results
ks.test
?ks.test
for(i in unique(data_summer$maxdemo)) {
for(y in 2018:2021) {
d <- data_summer %>% filter(maxdemo == i & year == y & visitors_percap < quantile(visitors_percap, .90))
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
ks_results <- rbind(ks_results, c(maxdemo = i, year = y, statistic = ks$statistic, pval = ks$p.value))
}
}
ks_results
ks_results <- c()
for(i in unique(data_summer$maxdemo)) {
for(y in 2018:2021) {
d <- data_summer %>% filter(maxdemo == i & year == y)
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
ks_results <- rbind(ks_results, c(maxdemo = i, year = y, percentile_visitors = "All" , statistic = ks$statistic, pval = ks$p.value))
d <- data_summer %>% filter(maxdemo == i & year == y & visitors_percap < quantile(visitors_percap, .95))
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
ks_results <- rbind(ks_results, c(maxdemo = i, year = y, percentile_visitors = "95th" , statistic = ks$statistic, pval = ks$p.value))
d <- data_summer %>% filter(maxdemo == i & year == y & visitors_percap < quantile(visitors_percap, .90))
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
ks_results <- rbind(ks_results, c(maxdemo = i, year = y, percentile_visitors = "90th" , statistic = ks$statistic, pval = ks$p.value))
}
}
KS <- ks.test(data_summer$visitors_percap, tmom_20$pop_density)
ks_results
write.csv(ks_results, "calculated/ks_results.csv")
#### distributions of CBG mobility for each demo group ----
pdf(paste0("./visuals/pub_figures/densityplots_mostmobile", td, ".pdf"))
## 2018
ggplot(data = data_summer %>% filter(year == 2018 & visitors_percap > quantile(visitors_percap, .95)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days 2018") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
## 2019
ggplot(data = data_summer %>% filter(year == 2019 & visitors_percap > quantile(visitors_percap, .95)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days 2019") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
## 2020
ggplot(data = data_summer %>% filter(year == 2020 & visitors_percap > quantile(visitors_percap, .95)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days 2020") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
## 2021
ggplot(data = data_summer %>% filter(year == 2021 & visitors_percap > quantile(visitors_percap, .95)),
aes(x = visitors_percap, group=hot)) +
geom_density(aes(color = hot)) +
ggtitle("Density of Mobility Hot vs Regular Days 2021") +
facet_wrap( ~ maxdemo, nrow = 2) +
theme_bw()
dev.off()
#### KS Tests ----
## get all combinations of hot v not hot for each demo
ks_results <- c()
for(i in unique(data_summer$maxdemo)) {
for(y in 2018:2021) {
d <- data_summer %>% filter(maxdemo == i & year == y)
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
ks_results <- rbind(ks_results, c(maxdemo = i, year = y, percentile_visitors = "All" , statistic = ks$statistic, pval = ks$p.value))
d <- data_summer %>% filter(maxdemo == i & year == y & visitors_percap > quantile(visitors_percap, .95))
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
ks_results <- rbind(ks_results, c(maxdemo = i, year = y, percentile_visitors = "95th" , statistic = ks$statistic, pval = ks$p.value))
d <- data_summer %>% filter(maxdemo == i & year == y & visitors_percap > quantile(visitors_percap, .90))
ks <- ks.test(d %>% filter(hot == "Regular Day") %>% pull(visitors_percap),
d %>% filter(hot == "Hot Day") %>% pull(visitors_percap))
ks_results <- rbind(ks_results, c(maxdemo = i, year = y, percentile_visitors = "90th" , statistic = ks$statistic, pval = ks$p.value))
}
}
