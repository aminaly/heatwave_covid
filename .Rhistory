## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Create full timelines with cumulative coverage of the results
## Amina Ly, October 2021
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# TODO before you run this make sure you do the following:
# make sure you have run and output the full results in the results folder
# make sure you have the ./visuals/ directory
# make sure you update the working directory
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
############# Part 1 - Setup #######################
#### Part 1.1 load packages ----
library(sf)
library(dplyr)
library(tidyverse)
library(lwgeom)
library(ggplot2)
library(gifski)
library(transformr)
library(RColorBrewer)
library(animation)
#### 1.2 Set working directory and load in results ----
## global vars
MOUNTAIN_ONLY <- T
## set working directory
ifelse(dir.exists("~/Box Sync/mountain_biodiversity/results"),
setwd("~/Box Sync/mountain_biodiversity/results"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/mountain_biodiversity/results"))
## set the working directory
ifelse(dir.exists("~/Box Sync/mountain_biodiversity"),
setwd("~/Box Sync/mountain_biodiversity"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/mountain_biodiversity"))
folder <- getwd()
kbas <- st_read(dsn = paste0(folder, "/data/KBA/KBA2020/KBAsGlobal_2020_September_02_POL.shp"), stringsAsFactors = F, crs = 4326)
getwd()
a <- read.csv("results/unzipped/clean_data_for_visuals_range_May2022.csv")
head(a)
unique(a$FilterString)
b <- read.csv("results/unzipped/clean_data_for_visuals_system_May2022.csv")
unique(b$FilterString)
?st_intersect
?st_intersects
?st_union
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Create full timelines with cumulative coverage of the results
## Amina Ly, October 2021
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# TODO before you run this make sure you do the following:
# make sure you have run and output the full results in the results folder
# make sure you have the ./visuals/ directory
# make sure you update the working directory
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
############# Part 1 - Setup #######################
#### Part 1.1 load packages ----
library(sf)
library(dplyr)
library(tidyverse)
library(lwgeom)
library(ggplot2)
library(gifski)
library(transformr)
library(RColorBrewer)
library(animation)
#### 1.2 Set working directory and load in results ----
## global vars
MOUNTAIN_ONLY <- T
## set working directory
ifelse(dir.exists("~/Box Sync/mountain_biodiversity/results"),
setwd("~/Box Sync/mountain_biodiversity/results"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/mountain_biodiversity/results"))
results_wcmc <- read_csv("finaltab_official2020_Apr2022.csv")
write.csv(results_wcmc[,1], "1row.csv")
results_wcmc[,1]
results_wcmc[1,]
write.csv(results_wcmc[1,], "1row.csv")
clean <- read.csv("clean_data_for_visuals_range_May2022.csv")
getwd()
clean <- read.csv("./clean_data_for_visuals_range_May2022.csv")
clean <- read.csv("/clean_data_for_visuals_range_May2022.csv")
clean <- read_csv("/clean_data_for_visuals_range_May2022.csv")
clean <- read_csv("clean_data_for_visuals_range_May2022.csv")
clean <- read_csv("unzipped/clean_data_for_visuals_range_May2022.csv")
write.csv(clean[1,], "1row.csv")
View(b)
ifelse(dir.exists("~/Box Sync/heatwave_covid"),
setwd("~/Box Sync/heatwave_covid"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/heatwave_covid"))
source("./regression_functions_shelter.R")
library(dplyr)
library(lfe)
library(ggplot2)
library(dotwhisker)
library(tidyverse)
library(lubridate)
library(reshape2)
library(stringr)
library(broom)
library(gridExtra)
library(wesanderson)
library(SafeGraphR)
library(interactions)
library(quantreg)
library(jtools)
## global vars
included_fips <- c("06081", "06085", "06001", "06013","06075", "06087", "06041", "06097", "06055", "06095") #bay area
data <- readRDS("./heatwaves_manual/data_with_demo_05_2022.RDS")
data <- data %>% filter(!is.na(unweighted_pop))
td <- format(Sys.Date(), "%m_%d_%Y")
#### add in demographic data (race) ----
race <- read_csv(paste0(getwd(), "/heatwaves_manual/safegraph_open_census_data/data/cbg_b02.csv"))
latinx <- read_csv(paste0(getwd(), "/heatwaves_manual/safegraph_open_census_data/data/cbg_b03.csv"))
race <- race %>% mutate(fips = substr(census_block_group, 1, 5)) %>%
filter(fips %in% included_fips) %>%
select(census_block_group, fips, white = B02001e2, black = B02001e3, native = B02001e4, asian = B02001e5,
pacificisld = B02001e6, other = B02001e7, two_or_more = B02001e8)
latinx <- latinx %>% mutate(fips = substr(census_block_group, 1, 5)) %>%
filter(fips %in% included_fips) %>%
select(census_block_group, fips, not_latinx = B03003e2, latinx = B03003e3)
race <- left_join(race, latinx, by = c("census_block_group", "fips"))
demo <- left_join(data, race, by = c("census_block_group", "fips"))
pdf(paste0("./visuals/pub_figures/fig6_temp", td, ".pdf"))
ys <- c(2020, 2021)
#### plots ----
quantiles <- c(.25, .5, .75, .95)
income <- unique(data %>% select(census_block_group, median_income, unweighted_pop))
income <- income %>% arrange(median_income) %>% mutate(cum_population = cumsum(unweighted_pop)) %>%
mutate(income_group_pop = ntile(median_income, 5)) %>% select(census_block_group, income_group_pop)
data <- left_join(data, income, by = "census_block_group")
hotdays <- temp_mobility_data %>% group_by(date) %>%
summarize(max_temp = max(mean_high_c, na.rm = T)) %>%
filter(max_temp >= 34) %>% pull(date)
data_subset <- data %>% filter(date %in% hotdays & year %in% ys) %>% mutate(minority = ifelse(maxdemo %in% c("p_white", "p_asian"), FALSE, TRUE))
results <- c()
for(yr in 2020:2021) {
for(ig in 1:5) {
print(ig)
ds <- data_subset %>% filter(year == yr & income_group_pop == ig)
for(quantile in quantiles) {
qr.b <- rq(visitors_percap ~ mean_high_c, tau = quantile, data = ds)
sum  <- summary(qr.b)$coefficients
row <- as.data.frame(cbind(year = yr, quant = qr.b$tau, group = ig,
pval = sum[2,4] , coef = sum[2,1], se = sum[2,2]))
row <- row %>% mutate(upper = coef + (2*se), lower = coef - (2*se))
results <- rbind(results, row)
}
}
}
hotdays <- data %>% group_by(date) %>%
summarize(max_temp = max(mean_high_c, na.rm = T)) %>%
filter(max_temp >= 34) %>% pull(date)
data_subset <- data %>% filter(date %in% hotdays & year %in% ys) %>% mutate(minority = ifelse(maxdemo %in% c("p_white", "p_asian"), FALSE, TRUE))
results <- c()
for(yr in 2020:2021) {
for(ig in 1:5) {
print(ig)
ds <- data_subset %>% filter(year == yr & income_group_pop == ig)
for(quantile in quantiles) {
qr.b <- rq(visitors_percap ~ mean_high_c, tau = quantile, data = ds)
sum  <- summary(qr.b)$coefficients
row <- as.data.frame(cbind(year = yr, quant = qr.b$tau, group = ig,
pval = sum[2,4] , coef = sum[2,1], se = sum[2,2]))
row <- row %>% mutate(upper = coef + (2*se), lower = coef - (2*se))
results <- rbind(results, row)
}
}
}
results <- as.data.frame(results)
pdf(paste0("./visuals/pub_figures/fig7_coefs", td, ".pdf"))
results <- results %>% mutate(quant_name = paste0("cbgs in ", quant * 100, "th percentile of mobility"))
ggplot(data = results,
aes(x = quant_name, y = coef, group = as.factor(year), color = as.factor(year), ymin = lower, ymax = upper)) +
geom_point(position = position_dodge2(1)) +
geom_errorbar(width = 1, position = position_dodge2(1)) +
geom_hline(yintercept=0, linetype="dashed",
color = "red", size=.5) +
facet_wrap( ~ group) +
labs(x = "Income Group", y = "Change in MI per degree increase above 34C",
title = "Quantile Regression Slope for all CBGs \n when at least one county >=34C ")
theme_bw()
dev.off()
td
?pdf
head(results)
ggplot(data = results,
aes(x = quant, y = coef, group = as.factor(year), color = as.factor(year), ymin = lower, ymax = upper)) +
geom_point(position = position_dodge2(1)) +
geom_errorbar(width = 1, position = position_dodge2(1)) +
geom_hline(yintercept=0, linetype="dashed",
color = "red", size=.5) +
facet_wrap( ~ group_name, nrow = 1) +
labs(x = "Income Group", y = "Change in MI per degree increase above 34C",
title = "Quantile Regression Slope for all CBGs \n when at least one county >=34C ")
pdf(paste0("./visuals/pub_figures/fig7_coefs", td, ".pdf"))
results <- results %>% mutate(quant_name = paste0("cbgs in ", quant * 100, "th percentile of mobility"),
group_name = paste("Income Group:", group))
ggplot(data = results,
aes(x = quant, y = coef, group = as.factor(year), color = as.factor(year), ymin = lower, ymax = upper)) +
geom_point(position = position_dodge2(1)) +
geom_errorbar(width = 1, position = position_dodge2(1)) +
geom_hline(yintercept=0, linetype="dashed",
color = "red", size=.5) +
facet_wrap( ~ group_name, nrow = 1) +
labs(x = "Income Group", y = "Change in MI per degree increase above 34C",
title = "Quantile Regression Slope for all CBGs \n when at least one county >=34C ")
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/fig7_coefs", td, ".pdf"))
results <- results %>% mutate(quant_name = paste0("cbgs in ", quant * 100, "th percentile of mobility"),
group_name = paste("Income Group:", group))
ggplot(data = results,
aes(x = quant, y = coef, group = as.factor(year), color = as.factor(year), ymin = lower, ymax = upper)) +
geom_point(position = position_dodge2(1)) +
geom_errorbar(width = 1, position = position_dodge2(1)) +
geom_hline(yintercept=0, linetype="dashed",
color = "red", size=.5) +
facet_wrap( ~ group_name, nrow = 2) +
labs(x = "Income Group", y = "Change in MI per degree increase above 34C",
title = "Quantile Regression Slope for all CBGs \n when at least one county >=34C ")
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/fig7_coefs", td, ".pdf"))
results <- results %>% mutate(quant_name = paste0(quant * 100, "percentile"),
group_name = paste("Income Group:", group))
ggplot(data = results,
aes(x = quant_name, y = coef, group = as.factor(year), color = as.factor(year), ymin = lower, ymax = upper)) +
geom_point(position = position_dodge2(1)) +
geom_errorbar(width = 1, position = position_dodge2(1)) +
geom_hline(yintercept=0, linetype="dashed",
color = "red", size=.5) +
facet_wrap( ~ group_name, nrow = 2) +
labs(x = "Income Group", y = "Change in MI per degree increase above 34C",
title = "Quantile Regression Slope for all CBGs \n when at least one county >=34C ")
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/fig7_coefs", td, ".pdf"))
results <- results %>% mutate(quant_name = paste(quant * 100, "th"),
group_name = paste("Income Group:", group))
ggplot(data = results,
aes(x = quant_name, y = coef, group = as.factor(year), color = as.factor(year), ymin = lower, ymax = upper)) +
geom_point(position = position_dodge2(1)) +
geom_errorbar(width = 1, position = position_dodge2(1)) +
geom_hline(yintercept=0, linetype="dashed",
color = "red", size=.5) +
facet_wrap( ~ group_name, nrow = 2) +
labs(x = "Income Group", y = "Change in MI per degree increase above 34C",
title = "Quantile Regression Slope for all CBGs \n when at least one county >=34C ")
theme_bw()
dev.off()
head(data_subset)
a <- data_subset %>% filter(income_group_pop == 1)
a
min(a$median_income)
max(a$median_income)
a <- data_subset %>% group_by(income_group_pop) %>% summarize(min = min(median_income), max = max(median_income))
a
yr = 2020
ig = 2
ds <- data_subset %>% filter(year == yr & income_group_pop == ig)
quantiles
quantile
qr.b <- rq(visitors_percap ~ mean_high_c, tau = quantile, data = ds)
ds
nrow(ds)
quantile(ds, quantiles)
quantile(ds$visitors_percap, quantiles)
temp_mobility_data_byday <- data_subset %>% group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T))
temp_mobility_data_byday
head(data)
pdf(paste0("./visuals/pub_figures/fig10_mobility", td, ".pdf"))
temp_mobility_data_byday <- data %>% group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T))
ggplot(data = temp_mobility_data_byday, aes(x=date, y = visitors_percap, group = income_group_pop, color = income_group_pop)) +
geom_smooth(alpha=0.2, position="identity") +
theme_bw()
dev.off()
head(data)
pdf(paste0("./visuals/pub_figures/fig10_mobility", td, ".pdf"))
temp_mobility_data_byday <- data %>% group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T),
avg_visitors = mean(visitors_percap, na.rm = T))
ggplot(data = temp_mobility_data_byday, aes(x=date, y = avg_visitors, group = income_group_pop, color = income_group_pop)) +
geom_smooth(alpha=0.2, position="identity") +
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/fig10_mobility", td, ".pdf"))
temp_mobility_data_byday <- data %>% group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T),
avg_visitors = mean(visitors_percap, na.rm = T))
ggplot(data = temp_mobility_data_byday, aes(x=date, y = avg_visitors,
group = as.factor(income_group_pop),
color = as.factor(income_group_pop))) +
geom_smooth(alpha=0.2, position="identity") +
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/fig10_mobility", td, ".pdf"))
temp_mobility_data_byday <- data %>% filter(year > 2019) %>%
group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T),
avg_visitors = mean(visitors_percap, na.rm = T))
ggplot(data = temp_mobility_data_byday, aes(x=date, y = avg_visitors,
group = as.factor(income_group_pop),
color = as.factor(income_group_pop))) +
geom_smooth(alpha=0.2, position="identity") +
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/fig10_mobility", td, ".pdf"))
temp_mobility_data_byday <- data %>% filter(Year > 2019) %>%
group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T),
avg_visitors = mean(visitors_percap, na.rm = T))
ggplot(data = temp_mobility_data_byday, aes(x=date, y = avg_visitors,
group = as.factor(income_group_pop),
color = as.factor(income_group_pop))) +
geom_smooth(alpha=0.2, position="identity") +
theme_bw()
dev.off()
head(data)
typeof(data$year)
pdf(paste0("./visuals/pub_figures/fig10_mobility", td, ".pdf"))
temp_mobility_data_byday <- data %>% filter(year > 2019) %>%
group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T),
avg_visitors = mean(visitors_percap, na.rm = T))
ggplot(data = temp_mobility_data_byday, aes(x=date, y = avg_visitors,
group = as.factor(income_group_pop),
color = as.factor(income_group_pop))) +
geom_smooth(alpha=0.2, position="identity") +
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/fig10_mobility", td, ".pdf"))
temp_mobility_data_byday <- data %>% filter(year %in% c(2020, 2021)) %>%
group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T),
avg_visitors = mean(visitors_percap, na.rm = T))
ggplot(data = temp_mobility_data_byday, aes(x=date, y = avg_visitors,
group = as.factor(income_group_pop),
color = as.factor(income_group_pop))) +
geom_smooth(alpha=0.2, position="identity") +
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/fig10_mobility", td, ".pdf"))
temp_mobility_data_byday <- data %>% filter(year %in% c(2020, 2021)) %>%
group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T),
avg_visitors = mean(visitors_percap, na.rm = T))
ggplot(data = temp_mobility_data_byday, aes(x=date, y = avg_visitors,
group = as.factor(income_group_pop),
color = as.factor(income_group_pop))) +
geom_smooth(alpha=0.2, position="identity", show.legend = FALSE) +
theme_bw()
dev.off()
pdf(paste0("./visuals/pub_figures/fig10_mobility", td, ".pdf"), paper = "USr")
temp_mobility_data_byday <- data %>% filter(year %in% c(2020, 2021)) %>%
group_by(date, income_group_pop, year, monthday) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T),
avg_visitors = mean(visitors_percap, na.rm = T))
ggplot(data = temp_mobility_data_byday, aes(x=date, y = avg_visitors,
group = as.factor(income_group_pop),
color = as.factor(income_group_pop))) +
geom_smooth(alpha=0.2, position="identity", show.legend = FALSE) +
theme_bw()
dev.off()
