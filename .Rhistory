citation("exactextractr")
#### Read and clean Income & Population ----
income <- read.csv(paste0(getwd(), "/heatwaves_manual/safegraph_open_census_data/data/cbg_b19.csv"), stringsAsFactors = F, header = T)
ifelse(dir.exists("~/Box Sync/heatwave_covid"),
setwd("~/Box Sync/heatwave_covid"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/heatwave_covid"))
#### Read and clean Income & Population ----
income <- read.csv(paste0(getwd(), "/heatwaves_manual/safegraph_open_census_data/data/cbg_b19.csv"), stringsAsFactors = F, header = T)
head(income)
income
income(1)
income[1]
income <- na.omit(income %>% dplyr::select(census_block_group, 	median_income = B19013e1))
library(dplyr)
library(tidyverse)
library(lubridate)
library(reshape2)
library(stringr)
library(SafeGraphR)
names(income)
#### Read and clean Income & Population ----
income <- read.csv(paste0(getwd(), "/heatwaves_manual/safegraph_open_census_data/data/cbg_b19.csv"), stringsAsFactors = F, header = T)
head(income)
income <- na.omit(income %>% dplyr::select(census_block_group, 	median_income = B19013e1))
income <- income %>% mutate("census_block_group" = ifelse(nchar(census_block_group) == 11,
paste0("0", census_block_group), census_block_group))
head(income)
median(income$median_income)
mean(income$median_income)
head(data)
ifelse(dir.exists("~/Box Sync/heatwave_covid"),
setwd("~/Box Sync/heatwave_covid"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/heatwave_covid"))
source("./regression_functions_shelter.R")
library(dplyr)
library(lfe)
library(ggplot2)
library(dotwhisker)
library(tidyverse)
library(lubridate)
library(reshape2)
library(stringr)
library(broom)
library(gridExtra)
library(wesanderson)
library(SafeGraphR)
library(interactions)
library(quantreg)
library(jtools)
library(sf)
library(gridExtra)
library(HeatStress)
#library(sjPlot)
#library(sjmisc)
## global vars
included_fips <- c("06081", "06085", "06001", "06013","06075", "06087", "06041", "06097", "06055", "06095") #bay area
quantiles <- c(.025, .5, .975)
ys <- c(2020, 2021)
td <- format(Sys.Date(), "%m_%d_%Y")
bootstrap_quantiles <- c(.025, .5, .975)
## read in data
data_all <- readRDS("./heatwaves_manual/data_with_demo_05_2022.RDS")
data <- data_all #copy of data to be filtered/edited
cbg <- st_read("./heatwaves_manual/shapefiles/cb_2019_us_bg_500k/cb_2019_us_bg_500k.shp", stringsAsFactors = F)
precip <- readRDS("./heatwaves_manual/precip20_21.rds")
rh <- readRDS("./heatwaves_manual/rh20_21.rds")
#### data cleaning ----
## create log version of MI
data <- data %>% mutate(visitors_percap_cr =  sign(visitors_percap) * (abs(visitors_percap))^(1/3)) %>%
mutate(visitors_percap_log = log(visitors_percap + 1.00001))
## remove smoke days
smoke_days <- c(seq(as.Date("2020-08-19"), as.Date("2020-08-25"), by = 1),
seq(as.Date("2020-09-10"), as.Date("2020-09-14"), by = 1),
as.Date("2020-08-31", format = "%Y-%m-%d"))
## clean up nas
data <- data %>% filter(!(date %in% smoke_days)) %>%
filter(!is.na(unweighted_pop)) %>%
filter(year %in% ys & !is.na(visitors_percap) & !is.na(median_income)) %>%
mutate(monthweekyr = paste0(monthweek, year))
## select only months where we know temps hit 95th percentile
data <- data %>% filter(month %in% c(5:9))
## add in income
income <- unique(data %>% dplyr::select(census_block_group, median_income, unweighted_pop))
income <- income %>% arrange(median_income) %>% mutate(cum_population = cumsum(unweighted_pop)) %>%
mutate(income_group_pop = ntile(median_income, 5)) %>% dplyr::select(census_block_group, income_group_pop) %>%
mutate(income_group_pop = as.factor(income_group_pop))
data <- left_join(data, income, by = "census_block_group")
data_all <- left_join(data_all, income, by = "census_block_group")
## get total number of counties experiencing extreme temperatures
b <- data %>% filter(p_high >= 95) %>% count(date, region)
data <- left_join(data, b, by = c("date", "region"))
data <- data %>% mutate(n = ifelse(is.na(n), 0, n)) %>% rename(n_over_their_95th = n)
perc95 <- quantile(data$mean_high_c, .95)
b <- data %>% filter(mean_high_c >= perc95) %>% count(date, region)
data <- left_join(data, b, by = c("date", "region"))
data <- data %>% mutate(n = ifelse(is.na(n), 0, n)) %>% rename(n_over_total = n)
## assign avg MI group (based on percentiles equivalent to quantile reg)
m <- data %>% group_by(census_block_group) %>%
summarize(median_mi = median(visitors_percap, na.rm = T)) %>%
mutate(mi_group = cut(median_mi,
breaks = c(-Inf, quantile(median_mi, c(.05, .95)), Inf),
labels = F))
data <- left_join(data, m, by = "census_block_group")
data <- data %>% mutate(mi_group = as.factor(mi_group))
## create combined categorical variable
data <- data %>% unite(mi_income_groups, c("mi_group", "income_group_pop"), remove = F)
## mark days where one or more county is >34 and separate TODO: DELETE if not using
hotdays <- data %>% group_by(date) %>%
summarize(max_temp = max(mean_high_c, na.rm = T)) %>%
filter(max_temp >= 34) %>% pull(date)
data_subset <- data %>% filter(date %in% hotdays)
## combine temp and census block group shapefile
data <- data %>% mutate(STATEFP = substr(census_block_group, 1, 2), COUNTYFP = substr(census_block_group, 3, 5),
TRACTCE = substr(census_block_group, 1, 11))
cbg$census_block_group <- paste0(cbg$STATEFP, cbg$COUNTYFP, cbg$TRACTCE, cbg$BLKGRPCE)
cbg <- cbg %>% filter(census_block_group %in% data$census_block_group)
## add in precip and wet bulb
data <- left_join(data, precip %>% select(date, census_block_group = GEOID, precip), by = c("date", "census_block_group"))
data <- left_join(data, rh %>% select(date, census_block_group = GEOID, rh), by = c("date", "census_block_group"))
## add in note of weekend or weekday
data <- data %>% mutate(weekday = ifelse(wday(date) %in% c(2:6), T, F))
## create map data
map_data <- data %>% group_by(year, census_block_group) %>%
summarize(visitors_percap = mean(visitors_percap, na.rm = T))
##pull out each year, join, and find the difference
cast_temp <- dcast(map_data, census_block_group ~ year)
cast_temp$diff <- cast_temp$`2021` - cast_temp$`2020`
cast_temp <- cast_temp %>% mutate(diff_r= rank(diff)) %>%
mutate(diff_log = log(diff_r)) %>% mutate(diff_cut = cut(diff, breaks = c(-Inf, seq(-3, 3, 1), Inf))) %>%
mutate(diff_sign = ifelse(diff > 0, 1, ifelse(diff < 0, -1, 0)))
map_data <- merge(cbg, cast_temp, by = "census_block_group")
## summarize by cbg and add to map data
mp <- data %>% group_by(census_block_group) %>%
summarize(income = unique(income_group_pop, na.rm = T),
percentile = mean(p_high, na.rm = T),
mean_temp = mean(mean_high_c, na.rm = T))
map_data <- merge(map_data, mp, by = "census_block_group")
days_above_34 <- data %>% filter(mean_high_c  >= 34 & year %in% c(2020,2021)) %>%
count(census_block_group)
map_data <- merge(map_data, days_above_34, by = "census_block_group")
map_data <- map_data %>% mutate(percentilen = as.factor(cut(percentile, 5)))
ggplot(data = da %>% filter(!is.na(income_group_pop)), aes(x=date, y = avg_mobility, group = income_group_pop)) +
geom_smooth(aes(group=income_group_pop, color=as.factor(income_group_pop)), show.legend = F) +
geom_vline(xintercept = imp_dates, color = "tomato") +
labs(x = "Date", y = "Average Mobility", color = "Income Group") +
theme_bw()
da <- data_all %>%
filter(year %in% c(2020:2021)) %>%
group_by(date, income_group_pop) %>%
summarize(avg_temp = mean(mean_high_c, na.rm = T),
avg_mobility = mean(visitors_percap, na.rm = T)) %>%
filter(!date %in% seq(as.Date("2021-10-28"), by = "day", length.out = 3))
ggplot(data = da %>% filter(!is.na(income_group_pop)), aes(x=date, y = avg_mobility, group = income_group_pop)) +
geom_smooth(aes(group=income_group_pop, color=as.factor(income_group_pop)), show.legend = F) +
geom_vline(xintercept = imp_dates, color = "tomato") +
labs(x = "Date", y = "Average Mobility", color = "Income Group") +
theme_bw()
imp_dates <- c(as.Date("2020-03-17"), as.Date("2020-03-22"), # initial restrictions
as.Date("2020-05-18"), as.Date("2020-05-20"), # phase 2 (lifts blanket orders)
as.Date("2020-06-19"), # beginning of reopening phases
as.Date("2020-12-18"), #vaccine introduction
as.Date("2021-04-15"), #16 and up eligible for vaccine in CA. Most places open with masking/vaccine restrictions
as.Date("2021-06-15")) #CA officially reopens
ggplot(data = da %>% filter(!is.na(income_group_pop)), aes(x=date, y = avg_mobility, group = income_group_pop)) +
geom_smooth(aes(group=income_group_pop, color=as.factor(income_group_pop)), show.legend = F) +
geom_vline(xintercept = imp_dates, color = "tomato") +
labs(x = "Date", y = "Average Mobility", color = "Income Group") +
theme_bw()
ggplot(data = da %>% filter(!is.na(income_group_pop)), aes(x=date, y = avg_mobility, group = income_group_pop)) +
geom_smooth(aes(group=income_group_pop, color=as.factor(income_group_pop))) +
geom_vline(xintercept = imp_dates, color = "tomato") +
labs(x = "Date", y = "Average Mobility", color = "Income Group") +
theme_bw()
i <- 1
## income interacted split years
coefs <- c()
print(i)
ds_all <- c()
f <- included_fips[1]
ds <- data %>% filter(fips == f & year == 2020)
samp <- sample(1:nrow(ds), nrow(ds), replace = T)
ds <- ds[samp,]
ds_all <- rbind(ds_all, ds)
ds <- data %>% filter(fips == f & year == 2021)
samp <- sample(1:nrow(ds), nrow(ds), replace = T)
ds <- ds[samp,]
ds_all <- rbind(ds_all, ds)
m1 <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweek, data = ds_all %>% filter(year ==2020))
m2 <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweek, data = ds_all %>% filter(year == 2021))
c <- rbind(m1$coefficients, m2$coefficients)
c
paste(c(1:5, 1:5))
paste0(c(1:5, 1:5), "_", c("2020", "2021"))
rownames(c) <- paste0(c(1:5, 1:5), "_", c("2020", "2021"))
coefs <- cbind(c, coefs)
coefs
coefs <- c()
for(i in 1:3) {
print(i)
ds_all <- c()
for(f in included_fips) {
ds <- data %>% filter(fips == f & year == 2020)
samp <- sample(1:nrow(ds), nrow(ds), replace = T)
ds <- ds[samp,]
ds_all <- rbind(ds_all, ds)
ds <- data %>% filter(fips == f & year == 2021)
samp <- sample(1:nrow(ds), nrow(ds), replace = T)
ds <- ds[samp,]
ds_all <- rbind(ds_all, ds)
}
m1 <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweek, data = ds_all %>% filter(year ==2020))
m2 <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweek, data = ds_all %>% filter(year == 2021))
c <- rbind(m1$coefficients, m2$coefficients)
rownames(c) <- paste0(c(1:5, 1:5), "_", c("2020", "2021"))
coefs <- cbind(c, coefs)
}
coefs <- apply(coefs, 1, quantile, bootstrap_quantiles)
plot_data <- c()
coef_quants <- cbind(t(as.data.frame(coefs)), c(1:5), c(rep(2020, 5), rep(2021, 5)))
coef_quants <- rbind(coef_quants, coefs_orig_yr)
colnames(coef_quants) <- c("low", "mid", "high", "group", "year")
coef_quants
ggplot(data = as.data.frame(coef_quants),
aes(x = group, y = mid, ymin = low, ymax = high)) +
geom_point(position = position_dodge2(1)) +
geom_errorbar(width = 1, position = position_dodge2(1)) +
geom_vline(xintercept = 3.5, color = "red") +
labs(x = "MI Group", y = "Change in 3√MI per degree increase C",
title = "Fixed Effects Slope for MI groups") +
facet_wrap( ~ year, nrow = 2) +
theme_bw()
#### MI v Temp + Precip (SUMMARY ONLY) ----
m <- felm(visitors_percap_cr ~ mean_high_c + precip  | census_block_group + monthweekyr, data = data)
txt <- paste("Adding in precip mean_high_c + precip \n", m$coefficients, "\n \n \n",
round(summary(m)$r2, 3), "\n",
round(summary(m)$P.r.squared, 3))
plot.new()
text(.5, .5, txt, font=2, cex=1.5)
m$coefficients
tableGrob(m$coefficients)
txt <- paste("Adding in precip mean_high_c + precip \n",
round(m$coefficients[1], 3), "\n",
round(m$coefficients[2], 3), "\n",
round(summary(m)$r2, 3), "\n",
round(summary(m)$P.r.squared, 3))
plot.new()
text(.5, .5, txt, font=2, cex=1.5)
txt <- paste("Adding in precip mean_high_c + precip \n",
round(m$coefficients[1], 5), "mean_high_c \n",
round(m$coefficients[2], 5), "precip \n",
round(summary(m)$r2, 5), "\n",
round(summary(m)$P.r.squared, 5))
plot.new()
text(.5, .5, txt, font=2, cex=1.5)
m <- felm(visitors_percap_cr ~ wb_temp  | census_block_group + monthweekyr, data = data)
txt <- paste("Adding in precip mean_high_c + precip \n",
round(m$coefficients[1], 5), "mean_high_c \n",
round(m$coefficients[2], 5), "precip \n",
round(summary(m)$r2, 5), "\n",
round(summary(m)$P.r.squared, 5))
plot.new()
head(data)
#### MI v Wetbulb ----
data <- data %>% mutate(wb_temp = swbgt(mean_high_c, rh))
m <- felm(visitors_percap_cr ~ wb_temp  | census_block_group + monthweekyr, data = data)
txt <- paste("Adding in precip mean_high_c + precip \n",
round(m$coefficients[1], 5), "mean_high_c \n",
round(m$coefficients[2], 5), "precip \n",
round(summary(m)$r2, 5), "\n",
round(summary(m)$P.r.squared, 5))
m
txt <- paste("Adding in precip mean_high_c + precip \n",
round(m$coefficients[1], 5), "wb_temp \n",
round(summary(m)$r2, 5), "\n",
round(summary(m)$P.r.squared, 5))
plot.new()
text(.5, .5, txt, font=2, cex=1.5)
m <- felm(visitors_percap_cr ~ mean_high_c + precip  | census_block_group + monthweekyr, data = data)
txt <- paste("Adding in precip mean_high_c + precip \n",
round(m$coefficients[1], 5), "mean_high_c \n",
round(m$coefficients[2], 5), "precip \n",
round(summary(m)$r2, 5), "r2 \n",
round(summary(m)$P.r.squared, 5), "proj r")
plot.new()
text(.5, .5, txt, font=2, cex=1.5)
#### MI v Wetbulb ----
data <- data %>% mutate(wb_temp = swbgt(mean_high_c, rh))
m <- felm(visitors_percap_cr ~ wb_temp  | census_block_group + monthweekyr, data = data)
txt <- paste("Adding in precip mean_high_c + precip \n",
round(m$coefficients[1], 5), "wb_temp \n",
round(summary(m)$r2, 5), "r2 \n ",
round(summary(m)$P.r.squared, 5), "proj r")
plot.new()
text(.5, .5, txt, font=2, cex=1.5)
#### Temperatures above 95th percentile (all, weekend v weekday interacted & subgrouped) ----
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.05
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
range(data_subgroup$mean_high_c)
median(data_subgroup$mean_high_c)
mean(data_subgroup$mean_high_c)
30-11
mean(data$mean_high_c)
median(data$mean_high_c)
m <- felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup)
m <- felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data_subgroup)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group | census_block_group + monthweekyr, data = data_subgroup)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data_subgroup)
summary(m)
unique(data_subgroup$date)
length(unique(data_subgroup$date))
data_subgroup %>% group_by(income_group_pop) %>% count(date)
data_subgroup %>% group_by(income_group_pop) %>% count(region)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subset)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup)
summary(m)
m <- felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup)
summary(m)
m <- felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data)
summary(m)
m <- felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data)
m$coefficients
m <- felm(visitors_percap_log ~ mean_high_c | census_block_group + monthweekyr, data = data)
m$coefficients
-0.00203484 - -0.002441256
m <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data)
m$r2
summary(m)
m <- felm(visitors_percap_log ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data)
summary(m)
.006/.0024
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)
summary(m)
sumary(felm(visitors_percap_log ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_log ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data))
head(Data)
head(data)
summary(felm(visitors_percap_log ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data_subgroup))
summary(felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data_subgroup))
names(m)
m$se
sum(m$se)
-.002^3
-.006^3
-.002^3/-.006^3
ln(-.006^3)
log(-.006^3)
log(.006^3)
log(-.002^3)
log(.002^3)
m1 <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweek, data = data %>% filter(year == 2020))
summary(m1)
m2 <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweek, data = data %>% filter(year == 2021))
summary(m2)
m1 <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweek, data = data_subgroup %>% filter(year == 2020))
m2 <- felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweek, data = data_subgroup %>% filter(year == 2021))
summary(m1)
summary(m1, m2)
summary(m)
summary(m1)
summary(m2)
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data))
-.00385/-.002096
-.003085/-.002096
m <- felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data)
m$coefficients
m$coefficients[1] / m$coefficients[2]
.003/.002
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data %>% filter(year == 2021)))
-0.0023/-0.0014
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data %>% filter(year == 2021)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2021)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2020)))
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)
summary(m)
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup)
)
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2021)))
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2021)))
m <- felm(visitors_percap_cr ~ mean_high_c:income | census_block_group + monthweekyr, data = data)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)
plot(c(0:5), m$coefficients)
m$coefficients
plot(c(1:5), m$coefficients)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data %>% filter(year == 2020))
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data %>% filter(year == 2021))
summary(m)
plot(1:5, m$coefficients)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data %>% filter(year == 2020))
plot(1:5, m$coefficients)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data %>% filter(year == 2021))
summary(m)
plot(1:5, m$coefficients)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data_subgroup)
plot(1:5, m$coefficients)
m <- felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data)
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data %>% filter(year == 2020))
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data %>% filter(year == 2021))
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data %>% filter(year == 2020))
summary(m)
m <- felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data)
summary(m)
summary(felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data_subgroup))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data %>% filter(year == 2021)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2021)))
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup))
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data_subgroup %>% filter(year == 2021)))
summary(felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c:income_group_pop | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c:mi_group | census_block_group + monthweekyr, data = data %>% filter(year == 2021)))
-0.0024^3
-0.0062^3
-0.0062^3 / (-1.3824e-08)
2n5^3
2.5^3
-0.0062/-0.0024
(-0.0062/-0.0024)^3
5.5/2
-0.0031/-0.0011
-0.0031/-0.0021
1.5^3
(-0.0031^3)/(-0.0021^3)
(-0.0023/-0.0008)^3
-0.0023/-0.0008
2.875^3
-0.002/-0.001
-0.0023/-0.0008
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data %>% filter(year == 2020)))
summary(felm(visitors_percap_cr ~ mean_high_c:weekday | census_block_group + monthweekyr, data = data %>% filter(year == 2021)))
-0.0023/-0.0014
1.642857^3
-0.0031/-0.0020
-0.0031^3/-0.0020^3
-0.0031^3/-0.0024^3
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.10
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.05
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.15
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.20
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.25
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.5
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.75
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
min_num_cbg_over_95th <- length(unique(data$census_block_group)) * 0.99
data_subgroup <- data %>% filter(n_over_their_95th >= min_num_cbg_over_95th)
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data_subgroup))
head(data)
summary(felm(visitors_percap_cr ~ wb_temp | census_block_group + monthweekyr, data = data))
summary(felm(visitors_percap_cr ~ mean_high_c | census_block_group + monthweekyr, data = data))
