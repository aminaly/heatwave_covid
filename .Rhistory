ifelse(dir.exists("~/Box Sync/heatwave_covid"),
setwd("~/Box Sync/heatwave_covid"),
setwd("/oak/stanford/groups/omramom/group_members/aminaly/heatwave_covid"))
source("./regression_functions_shelter.R")
library(dplyr)
library(lfe)
library(ggplot2)
library(dotwhisker)
library(tidyverse)
library(lubridate)
library(reshape2)
library(stringr)
library(broom)
library(gridExtra)
library(wesanderson)
library(SafeGraphR)
library(interactions)
library(quantreg)
library(jtools)
library(sf)
library(gridExtra)
## global vars
included_fips <- c("06081", "06085", "06001", "06013","06075", "06087", "06041", "06097", "06055", "06095") #bay area
quantiles <- c(.025, .5, .975)
ys <- c(2020, 2021)
## read in data
data_all <- readRDS("./heatwaves_manual/data_with_demo_05_2022.RDS")
data <- data_all #copy of data to be filtered/edited
cbg <- st_read("./heatwaves_manual/shapefiles/cb_2019_us_bg_500k/cb_2019_us_bg_500k.shp", stringsAsFactors = F)
td <- format(Sys.Date(), "%m_%d_%Y")
#### data cleaning ----
## create log version of MI
data <- data %>% mutate(visitors_percap_cr =  sign(visitors_percap) * (abs(visitors_percap))^(1/3)) %>%
mutate(visitors_percap_log = log(visitors_percap + 1.00001))
## remove smoke days
smoke_days <- c(seq(as.Date("2020-08-19"), as.Date("2020-08-24"), by = 1),
seq(as.Date("2020-09-10"), as.Date("2020-09-14"), by = 1),
as.Date("2020-08-31", format = "%Y-%m-%d"))
## clean up nas
data <- data %>% filter(!(date %in% smoke_days)) %>%
filter(!is.na(unweighted_pop)) %>%
filter(year %in% ys & !is.na(visitors_percap) & !is.na(median_income)) %>%
mutate(monthweekyr = paste0(monthweek, year))
## select only months where we know temps hit 95th percentile
data <- data %>% filter(month %in% c(5:9))
## add in income
income <- unique(data %>% select(census_block_group, median_income, unweighted_pop))
income <- income %>% arrange(median_income) %>% mutate(cum_population = cumsum(unweighted_pop)) %>%
mutate(income_group_pop = ntile(median_income, 5)) %>% select(census_block_group, income_group_pop) %>%
mutate(income_group_pop = as.factor(income_group_pop))
data <- left_join(data, income, by = "census_block_group")
data_all <- left_join(data_all, income, by = "census_block_group")
## get total number of counties experiencing extreme temperatures
b <- data %>% filter(mean_high_c >= 34) %>% count(date, region)
data <- left_join(data, b, by = "date")
data <- data %>% mutate(n = ifelse(is.na(n), 0, n))
## mark days where one or more county is >34 and separate TODO: DELETE if not using
hotdays <- data %>% group_by(date) %>%
summarize(max_temp = max(mean_high_c, na.rm = T)) %>%
filter(max_temp >= 34) %>% pull(date)
data_subset <- data %>% filter(date %in% hotdays)
## combine temp and census block group shapefile
data <- data %>% mutate(STATEFP = substr(census_block_group, 1, 2), COUNTYFP = substr(census_block_group, 3, 5),
TRACTCE = substr(census_block_group, 1, 11))
cbg$census_block_group <- paste0(cbg$STATEFP, cbg$COUNTYFP, cbg$TRACTCE, cbg$BLKGRPCE)
cbg <- cbg %>% filter(census_block_group %in% data$census_block_group)
## create map data
map_data <- data %>% group_by(year, census_block_group) %>%
summarize(visitors_percap = mean(visitors_percap, na.rm = T))
##pull out each year, join, and find the difference
cast_temp <- dcast(map_data, census_block_group ~ year)
cast_temp$diff <- cast_temp$`2021` - cast_temp$`2020`
cast_temp <- cast_temp %>% mutate(diff_r= rank(diff)) %>%
mutate(diff_log = log(diff_r)) %>% mutate(diff_cut = cut(diff, breaks = c(-Inf, seq(-3, 3, 1), Inf))) %>%
mutate(diff_sign = ifelse(diff > 0, 1, ifelse(diff < 0, -1, 0)))
map_data <- merge(cbg, cast_temp, by = "census_block_group")
## summarize by cbg and add to map data
mp <- data %>% group_by(census_block_group) %>%
summarize(income = unique(income_group_pop, na.rm = T), percentile = mean(p_high, na.rm = T))
map_data <- merge(map_data, mp, by = "census_block_group")
days_above_34 <- data %>% filter(mean_high_c  >= 34 & year %in% c(2020,2021)) %>%
count(census_block_group)
map_data <- merge(map_data, days_above_34, by = "census_block_group")
map_data <- map_data %>% mutate(percentilen = as.factor(cut(percentile, 5)))
#### make some figs ----
pdf(paste0("./visuals/pub_figures/view_log_", td, ".pdf"))
#### Fixed Effecst MI v Temp ----
m <- felm(visitors_percap_log ~ mean_high_c | census_block_group + date, data = data)
quantiles <- c(.025, .5, .975)
## bootstrap coefficients (resample within each county)
coefs <- c()
for(i in 1:1000) {
print(i)
ds_all <- c()
for(f in included_fips) {
ds <- data %>% filter(fips == f)
samp <- sample(1:nrow(ds), nrow(ds), replace = T)
ds <- ds[samp,]
ds_all <- rbind(ds_all, ds)
}
m <- felm(visitors_percap_log ~ mean_high_c | census_block_group + date, data = ds_all)
coefs <- cbind(m$coefficients, coefs)
}
## plot
coefs <- quantile(coefs, quantiles)
plot_data <- as.data.frame(x = 0:45)
colnames(plot_data) <- c("x")
y <- plot_data$x * coefs[2]
plot_data$y <- y - y[x=24]
upper <- plot_data$x * coefs[3]
plot_data$upper <- upper - upper[x=24]
lower <- plot_data$x * coefs[1]
plot_data$lower <- lower - lower[x=24]
ggplot(data = plot_data, aes(x, y))+
geom_ribbon(data = plot_data, aes(ymin = lower, ymax = upper), linetype=2, alpha = 0.25, fill = "purple") +
geom_line(data = plot_data, aes(x, y))+
labs(title = "felm(visitors_percap_log ~ mean_high_c |
census_block_group + date, data = data)
\n May-Sept", x = "Temperature C", y = "log(MI)") +
theme(axis.text.x = element_text(angle = 90)) +
theme_bw()
#### MI v Temp : Income----
m_inter <- felm(visitors_percap_log ~ mean_high_c:as.factor(income_group_pop) | census_block_group + date, data = data)
coefs_interacted <- c()
for(i in 1:1000) {
print(i)
ds_all <- c()
for(f in included_fips) {
ds <- data %>% filter(fips == f)
samp <- sample(1:nrow(ds), nrow(ds), replace = T)
ds <- ds[samp,]
ds_all <- rbind(ds_all, ds)
}
m <- felm(visitors_percap_log ~ mean_high_c:as.factor(income_group_pop) | census_block_group + date, data = ds_all)
coefs_interacted <- cbind(m$coefficients, coefs_interacted)
}
coef_quants <- apply(coefs_interacted, 1, function(x) quantile(x, quantiles))
coef_quants <- cbind(t(as.data.frame(coef_quants)), c(1:5))
colnames(coef_quants) <- c("low", "mid", "high", "group")
coef_quants <- rbind(coef_quants, c(coefs, 6))
ggplot(data = as.data.frame(coef_quants),
aes(x = group, y = mid, ymin = low, ymax = high)) +
geom_point(position = position_dodge2(1)) +
geom_errorbar(width = 1, position = position_dodge2(1)) +
geom_hline(yintercept=coef_quants[6,2],  linetype="dashed",
color = "red", size=.5) +
geom_vline(xintercept = 5.5, color = "red") +
labs(x = "Income Group", y = "Change in MI per degree increase C",
title = "Fixed Effects Slope for all CBGs May-Sept \n
felm(visitors_percap_log ~ mean_high_c:as.factor(income_group_pop)
| census_block_group + date, data = data") +
theme_bw()
dev.off()
